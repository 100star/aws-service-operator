// Code generated by go-bindata.
// sources:
// assets/aws-service-operator.yaml.templ
// assets/base.go.templ
// assets/cft.go.templ
// assets/operator.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsServiceOperatorYamlTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x92\x05\x0a\x14\x95\xbc\xee\xa9\x10\x92\x00\xa9\xed\x6e\x8d\x4d\x9d\xc0\xf6\xf6\xba\x3b\xa6\xc6\x32\x6b\x8a\x24\x48\xca\x5e\xaf\xe1\xff\x5e\x90\xfa\x88\x3f\x93\xa0\xdd\xd5\x49\x1c\x8e\xe6\xcd\x7b\x7c\x1c\x5d\xc3\x5d\xf5\x40\xff\x11\x46\x8f\x53\x18\xf4\x87\x53\x98\xfe\x39\x9c\xc0\x1f\xc3\x87\x01\xdc\xb4\x4f\x74\x0d\xd3\x05\xb7\x30\xe7\x82\x80\x5b\xc0\xd2\xa9\x9c\x24\x19\x74\x94\xc1\x8a\x23\x7c\xc1\xb5\x8d\x95\xf6\x11\x65\xa0\xd9\xfb\x12\x5d\xc3\x70\x0e\x1b\x55\xfe\x94\x81\xe0\x4b\x02\xb7\x20\x60\x0b\x94\x39\x01\xca\x8d\x5b\x70\x99\x03\xce\x54\xe9\xc0\xb5\x00\x05\x2e\x09\x28\xe3\xce\x82\x53\xe1\x8b\xc4\x51\xa1\x45\x74\x5d\x37\x20\x43\x50\x2f\xf3\x0e\x53\x19\xe5\x24\x3b\x68\x2d\x39\x0b\x19\x37\xc4\x9c\x32\x9b\x24\x8a\x50\xf3\xbf\xc9\x58\xae\x64\x0a\xab\x6e\xb4\xe4\x32\x4b\xe1\x81\x5b\x17\x71\x47\x85\x4d\xa3\x18\xaa\xd8\x08\x0b\xb2\x1a\x19\x45\x00\x47\x1f\x01\x14\xe4\x30\x43\x87\x69\x04\x00\x20\xb1\xa0\x14\x3c\x55\x4b\x66\xc5\x19\xb5\x94\xa3\xed\xd6\x04\x56\xef\xb8\xcc\xe8\xeb\x2f\xf0\x8e\x04\x15\x24\x1d\xa4\xb7\x90\x0c\x3d\xe2\x6e\x17\xc5\x07\x00\xa8\x39\x7d\x75\x24\xfd\xca\x26\xcb\xdf\x6c\xc2\x55\x67\xd5\x9d\x91\x43\x0f\x5d\x75\xd7\x2b\xad\x53\xc5\x98\xac\x2a\x0d\xa3\x3e\xcd\xb9\xe4\x8e\x2b\x79\xa1\xb7\xed\xb6\x01\x4e\x26\x9a\x58\xd2\x7c\x98\x3c\x89\xd2\xa0\xd8\xed\x92\xe3\xce\x13\x5c\xdb\x08\xc0\x6a\x62\x55\xa1\xdc\xa8\x52\xa7\x70\x21\xaf\x02\xb2\x55\x6a\xd3\xe4\x31\xea\x47\x2e\xb3\xdd\xae\x4e\x11\xdc\xba\x8f\x2f\xa4\x85\x33\xa9\x52\x75\x68\xf2\x0d\x2c\xea\x7c\xbb\x50\xc6\x8d\xf6\xfb\xd9\x6e\x63\x38\x73\x10\xfe\x14\x2e\x94\x9c\xf8\x1a\x81\x53\x5b\x36\x6e\x1a\x48\x7c\xed\x36\xec\x6b\xd3\x1e\x31\xcb\x65\x5e\x0a\x34\x6f\xed\xd7\x32\xa5\x69\xcf\x6f\x59\x88\xae\x9e\xfd\x86\x42\x2f\xb0\x1b\x6d\xb7\x15\x4a\x63\xd0\x9e\x28\xad\x23\x33\x56\xe2\xd8\xa2\x66\x86\x2c\xc1\xd2\x2d\x94\xe1\xdf\xd0\xdb\xe2\xd4\x46\x6f\x76\x30\x80\x29\x45\xa5\x64\xf0\xe9\x07\xef\x83\x5a\xd8\x18\xae\xae\xc2\x8b\xa9\x99\xb5\x71\x4b\xcc\x90\xb3\xf5\x4a\xab\xac\x79\x65\x4a\xce\x79\x5e\xa0\xb6\x6d\x66\x00\xb4\x0d\xeb\x59\x5b\x23\x27\x57\xbf\x89\xc6\x0b\x31\xac\xd1\xb1\x45\x53\xcb\x10\x3a\xaa\x17\x19\x09\x6a\x17\xa5\xce\xaa\x9d\x33\x2d\x9f\xbb\x5f\xe7\x49\xb0\x70\xc9\x9a\x70\xd6\x5e\xb2\xef\xd7\xeb\x99\xf6\x2e\x5e\xb0\x93\xf6\xae\x7e\xbe\x3a\x6d\xc4\x07\x5b\x8b\x4c\xaa\x5a\xf7\x8c\xa9\x52\xba\xff\x35\xc8\xda\x2b\xee\x2d\x7a\x21\xe7\x9c\x35\x7f\xe7\x32\xe3\x32\xff\xc1\x0e\x55\x82\xc6\x34\xaf\x32\x1b\x45\x5f\x40\x89\x9e\x67\xd4\xe1\x2d\x7a\x05\xc7\x96\xb3\x7f\x88\xb9\xfa\x32\x5c\xd0\xf8\xfb\xc9\xd8\x27\x2d\xd4\xc6\xcf\x8f\x23\xf9\x50\x6b\xfb\xdf\x94\x7a\x1d\x7d\x7f\xe6\x1b\xd2\x82\x33\xb4\x29\x74\xc3\x3a\xfc\x6f\xd1\x51\x33\x56\x0f\x81\x83\xf8\x52\x2a\x17\xa4\xb6\xcf\x41\x00\x8e\x45\x82\x05\x7e\x53\x12\xd7\x36\x61\xaa\xe8\xf8\x23\x4b\x01\x8d\x4c\x71\x6d\x53\x8e\x45\x9a\xde\xdc\xf7\x7a\x8f\x9f\x46\xd3\xcf\xc3\xfe\x5d\xea\xf7\x3b\x17\x49\x84\x1f\x08\xce\x48\x1c\xa0\xa0\xd6\x2f\x10\xdf\x27\x16\x56\x07\x07\x37\x7a\x59\x35\xff\x30\x25\x1d\x72\x49\x66\x0f\x34\x7e\x4d\xee\x9a\x7f\x81\x79\x95\x55\x27\x35\x39\x67\x29\xa6\xab\xf7\xc9\xfb\xa4\x1b\x87\xc1\xff\xeb\x71\x99\xa7\x52\x88\x27\x25\x38\xdb\xa4\x70\x2f\xd6\xb8\xb1\xfb\x12\x98\xfc\x40\x92\x66\xa2\x90\x39\x0a\xc6\x31\xab\x9c\x1f\x7b\x02\xb7\x37\xbd\x87\x4f\x93\xe9\x60\xfc\x79\x74\xff\xd7\xe0\xee\x24\xd7\x50\xce\x95\xbc\xbd\x19\x0f\x3e\x0c\x1f\x47\xa7\xfb\x58\x89\x18\xf3\xec\x76\xff\x14\xff\x0d\x00\x00\xff\xff\xa4\x51\xdf\x46\x4b\x0a\x00\x00")

func awsServiceOperatorYamlTemplBytes() ([]byte, error) {
	return bindataRead(
		_awsServiceOperatorYamlTempl,
		"aws-service-operator.yaml.templ",
	)
}

func awsServiceOperatorYamlTempl() (*asset, error) {
	bytes, err := awsServiceOperatorYamlTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-service-operator.yaml.templ", size: 2635, mode: os.FileMode(436), modTime: time.Unix(1538901344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xcf\x8a\xdb\x30\x10\xc6\xcf\xd6\x53\x4c\x97\xa5\xd8\x8b\x23\xb3\xd7\xc0\x9e\x72\xda\x4b\x0a\x0d\xb4\x67\x45\x99\xd8\x22\xb6\x24\x46\x4a\xbc\xc5\xe8\xdd\x8b\x64\x2b\xfb\x07\x96\x74\x7b\x1a\xcf\xd8\xa3\xef\x9b\x9f\xc6\x56\xc8\x93\x68\x11\xf6\xc2\x21\x63\x6a\xb0\x86\x3c\x94\x0c\xe0\xae\x55\xbe\x3b\xef\xb9\x34\x43\x23\x46\xd7\x8b\xbd\x8b\x71\xe5\x90\x2e\x4a\xe2\xca\x58\x24\xe1\x0d\x35\xf6\xd4\x36\xd2\xe8\xa3\x6a\xef\x18\x80\xb1\x27\xe5\xdf\x35\xcb\x8e\x94\xf3\xc6\x76\x48\x1d\x2a\xdd\xe4\xc6\xd5\x49\xf9\xd8\x21\x46\x27\x7b\x85\xda\x7f\x51\x32\xf5\x2c\xc1\xa1\x6f\x2e\x48\x4e\x19\x8d\x87\xc6\xff\xb1\x78\x68\x3e\x76\x71\x31\xba\xe6\xf2\x28\x7a\xdb\x89\xc7\x28\x3c\x4d\x2b\x20\xa1\x5b\x84\x7b\xa5\x0f\xf8\x52\xc3\x3d\xf6\x38\x44\x27\xeb\x27\xe0\xcf\x1e\x07\x17\xc2\x57\x51\xe4\xc4\x35\xd3\x94\xcf\xe3\x3b\x8b\x92\xff\x44\x67\xce\x24\x91\x6f\xc5\x80\x21\x64\x0b\xa8\x0f\x21\xb0\x8a\xb1\x68\x3b\xdd\x03\x38\x4f\x67\xe9\x61\x62\x00\x33\x59\x78\x98\x23\xdf\xa4\x30\xd7\x3d\xbe\x78\x78\x48\xc0\x63\x3d\xa6\x33\xce\x4d\x66\xf2\xca\x96\xef\x66\xaf\xd9\xdd\xaf\x85\xc3\xb3\xf6\x48\x47\x21\x91\x05\xc6\x8e\x67\x2d\x61\x8b\x63\xf9\x99\x6e\xfd\xa9\x70\xfd\xff\xca\x35\xab\xe0\x21\x8d\x1d\xe7\x25\xf4\x67\xd2\xf0\x3d\x16\x62\x9e\x9d\xac\x97\x58\xe7\x5a\x54\x5d\xe7\x87\xb9\xfa\xd6\xc0\xfa\x5d\x16\xdf\x87\xeb\x88\xe5\x7e\x16\xac\xe0\xb7\xf0\xb2\x2b\xb5\x18\xd0\x59\x21\x13\x78\xa5\xdb\x1a\xe2\xbe\x6e\x3a\x90\x9d\xd0\xcb\x65\x4c\xa1\x82\x12\x89\x00\x89\x0c\x55\xc9\xeb\x3f\x2f\xd0\x8d\x4d\xc8\x68\x62\xd7\x8d\x4f\xf9\x16\xc7\x1f\xcb\xe7\x65\xdc\xc8\xc4\x04\xd2\x53\x02\x01\x7b\xfe\x76\xf0\x8a\x15\xd1\xf4\xcd\x73\xaf\x3f\xc9\xce\x0b\xf2\x1f\xb0\x64\x1e\x15\x2b\xd4\x31\x02\x80\x6f\x4f\xa0\x55\x0f\x13\x2b\xae\x37\x86\x44\xac\x08\xac\x78\x5d\x69\x56\x2c\xaf\xb4\xea\x59\xf8\x1b\x00\x00\xff\xff\x8e\xb1\x71\xd6\x69\x04\x00\x00")

func baseGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_baseGoTempl,
		"base.go.templ",
	)
}

func baseGoTempl() (*asset, error) {
	bytes, err := baseGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.go.templ", size: 1129, mode: os.FileMode(420), modTime: time.Unix(1538901919, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\x9b\xc8\x13\x7f\x0d\x9f\x62\xfe\x56\xd5\x3f\x44\x0e\xbe\xbe\xb5\x2e\x27\xf5\x9a\x3e\x44\xad\x92\x2a\x76\xdb\x17\x51\xd4\xae\x61\x8c\xb7\xc1\x2c\xc7\x2e\xf1\xf9\x2c\xbe\xfb\x69\x1f\x30\x0b\x36\x76\xdc\xf6\xda\xeb\xc9\xa8\x95\x61\x99\xf9\xcd\xe3\xce\xec\x84\xc1\x00\x7e\xd3\x17\x9c\x5f\xc1\xe5\xd5\x18\x9e\x9f\x5f\x8c\x61\xfc\xea\x62\x04\x2f\x2e\xde\x3c\x87\x5f\xd7\x97\x3b\x18\xc0\x78\x46\x39\x4c\x69\x82\x40\x39\x90\x42\xb0\x18\x53\xcc\x89\xc0\x08\xee\x29\x81\x4f\x64\xc1\x4f\x59\x26\x57\x58\x7e\x1a\xb2\x08\x63\x4c\x21\xcb\x59\x88\x9c\x7f\x92\x00\x17\x53\x58\xb2\xe2\xff\x11\x24\xf4\x0e\x41\xcc\x10\xc2\x19\x49\x63\x04\x92\x2e\xc5\x8c\xa6\x31\x90\x09\x2b\x04\x88\xb5\xa0\x39\xb9\x43\xc0\x88\x0a\x0e\x82\x29\x8e\x40\xe0\x3c\x4b\x24\x9a\xd6\x24\x55\xab\xd9\x5d\x3c\x30\x12\x07\x84\x73\x14\x1c\x22\x9a\x63\x28\x58\xbe\x0c\x5c\x37\x23\xe1\x1d\x89\x11\x56\xab\x60\x94\x61\x18\x5c\x23\x67\x45\x1e\x62\x70\x49\xe6\x58\x96\xae\x4b\xe7\x19\xcb\x05\x78\xae\xd3\xc3\x3c\x67\x39\xef\xb9\x4e\x2f\xa6\x62\x56\x4c\x82\x90\xcd\x07\x64\xc1\xe5\xff\x53\x1e\xdd\x9d\xc6\x4c\xde\xee\x26\xe0\x98\xdf\xd3\x10\x07\x61\xc2\x8a\x68\xca\xf2\x39\x11\x94\xa5\x3d\xd7\x21\x0b\xfe\xfe\x09\x49\xb2\x19\x79\x02\x2d\xfe\x84\x4c\x0c\x86\x66\x5e\xfb\x72\x20\xad\x23\x19\xe5\x83\xf6\x9b\x40\x8a\xbd\x37\x78\x9b\x1a\xed\x46\x0c\x59\x3a\xa5\xf1\xa1\x5c\x33\x4c\x32\x94\xfe\xf1\x5d\x19\x84\x4b\x5c\x40\x95\x06\x1c\x08\xa4\xb8\x00\x36\xf9\x8c\xa1\x70\xa7\x45\x1a\xca\xf7\x9e\x16\x04\x27\xfa\x37\x78\xa6\x7e\xfa\x5d\xc1\x80\x13\xcb\x47\x41\x45\xf4\x9a\xa6\x51\x59\xf6\x41\xb0\x8c\x86\x4f\xaf\x2f\x81\x8b\x9c\xa6\xb1\x0f\x27\xcf\x1a\x2e\x86\x95\xeb\xe4\x28\x8a\x3c\x85\xc7\xcd\x37\x2b\xd7\x71\x9a\x68\xc3\x2e\x15\xfa\xae\xe3\x68\x65\x87\x8e\xbc\xf4\x7d\xdf\x05\x80\xb5\x02\x43\xd0\x57\xf5\xdc\x77\x9d\xd2\x2d\x95\x4f\x5a\x1a\x45\x38\xa5\x29\x72\x95\xa7\x5d\x36\x87\x53\xc1\x5d\xb1\xcc\xb0\xcd\xcc\x45\x5e\x84\x42\x5a\x65\xbc\x58\x5d\x4d\x6f\xba\x2d\xd3\x76\x39\xd1\xad\x95\x36\x58\xda\x97\x46\xfb\x91\x20\xe1\x9d\x54\x0b\xb4\x1f\xb5\xe2\xa9\x5c\x60\x53\x75\xcf\x25\x05\x4c\x08\xc7\x08\x98\xde\x7f\xad\xad\xaf\x54\x52\xf1\xf7\x78\x3b\x42\x7e\x2d\xc1\xf3\x8d\x68\x2b\x6a\x26\xbf\x82\x9a\x88\x07\x95\xa9\x49\xc1\x05\xe6\x72\xb1\x0f\xbd\x0e\x57\xf6\xfa\xc0\x5b\x06\x07\x9a\x63\xeb\x32\xcf\x48\x88\xbe\x31\xfd\x25\x8a\xab\x42\x64\x85\xe0\xc6\x76\xcb\x5c\x66\x5e\x4c\x73\x36\x57\xcb\xe7\xc8\xc3\x9c\x4e\x50\x29\xca\x21\x24\x49\xd2\x6d\x72\x8d\xec\xf9\xe0\xcd\x49\x76\xa3\x0d\xbf\xd5\x3f\x7d\x50\x55\xc7\x97\x7e\xa8\x04\x0d\xcf\x60\x83\x6e\x55\xba\x0e\x47\xae\x5e\xae\xdd\xf2\xf4\xc3\x68\x84\x9c\x53\x96\xba\x0e\xbf\x0f\xe5\xbb\x66\xd9\x09\xe4\x26\x94\x6c\xbe\xeb\x3a\xca\x9a\x8b\xb4\x12\xd1\xa2\x6c\x1a\xa5\xc8\xe4\xbe\x59\x07\x43\x66\x3d\x59\xc8\xe8\x48\x75\x3c\x3b\x4c\xbe\xaf\xb6\x40\x65\x80\x32\x49\xe9\x79\x1f\xb6\x60\xbd\xc7\x96\x12\xbe\xeb\xd0\xa9\xa2\xfd\xdf\x19\xa4\x34\x91\x2e\xa8\x72\x21\xa5\x89\x82\x91\xb8\x8e\x2c\x36\x4c\x00\x2f\x72\x04\x3a\xd5\x3d\x82\x72\xc0\x7b\xd9\x64\x18\xe7\x74\x92\xa0\xc2\x4a\x30\xf5\xb4\x0e\x5a\x3b\xee\x4b\xe8\x27\xdb\x80\x59\xce\x95\x73\x7a\x29\xd3\x61\xae\x02\x8f\x11\x2c\xa8\x98\x81\x98\x11\x61\x12\x40\xee\x80\x9e\xaf\x4d\x9c\xb2\x1c\x3e\xf6\x65\x4e\x48\x0b\x73\xd5\xc3\x1a\x22\x6f\x7e\xb9\x0d\xaa\x54\x92\x72\x4d\x50\x6f\x4e\x58\x21\xcc\x8b\xd7\xb8\xbc\x85\x33\xb0\x56\xde\x93\xa4\x40\x2d\xc0\xe8\x69\xd8\xb4\x13\x4c\x71\xc9\x91\x08\xed\x48\x58\xd0\x24\x81\x50\x2d\x58\x99\x6a\x14\x47\xe0\x45\x96\x25\x14\x23\xc8\x48\x4e\xe6\xbc\x3b\x3b\x2d\x4c\x99\x9e\x5a\x2a\x9c\xb4\x72\xc3\xa2\xba\xb2\x42\x5c\x67\xee\x57\x66\x66\x38\x55\xad\x5d\x1a\x33\x3c\x5b\xd7\x81\x97\x28\x94\xba\x2f\x2a\x9e\xb1\x21\x5a\xd7\x85\xc3\x6a\x41\xf5\x38\x5e\x66\x58\x96\xc1\x76\xec\x8e\x82\xf1\x60\x5e\x53\x55\xf6\xed\x36\xcb\xa3\x87\x6f\x35\xa7\x12\xf8\xee\xfa\xcd\xd0\xa6\xac\xfd\xa8\xc8\x2e\x99\xa0\x53\x1a\x2a\x89\x4f\xaf\x2f\xf9\x10\x6e\x6e\x4f\x4c\x39\x71\x1d\xc7\x69\xc8\xa8\x1a\x83\xe2\x2c\xfb\x55\x32\x6a\xaf\xaa\xa6\x60\x85\x46\xab\xff\x56\x26\x97\xd7\xbb\xb6\x88\xba\x6a\xb0\x5f\x63\xbd\xc7\x5c\xe6\xc5\x5e\x38\x43\xb7\x0d\xb1\x45\xe2\xbb\x4e\x5a\xb9\xbe\x13\x76\x1d\x9c\x2e\x15\x4d\xe4\x9c\xb0\xee\x35\x9d\x60\x56\x3f\x52\x70\x9b\x6d\xca\x77\x57\xab\x53\x53\x1f\x1e\x09\x96\x49\x28\x2d\xf2\x77\x16\x2d\x83\x51\x38\xc3\x39\x09\xde\xe6\xb2\x75\x0a\x8a\xbc\x2c\x65\x23\x3f\x95\xf5\x6d\xcb\xaa\xc1\x49\x91\xcb\x23\xb7\x84\x6a\xd0\xd4\xac\x26\x33\xe8\x5f\x18\x69\x5e\x29\x3b\x78\x8d\xcb\xb2\x5c\xad\x0c\xbf\x7e\x94\x94\x12\xa9\x57\xaf\x57\x69\x55\x96\x3d\x8d\x88\x09\xc7\x87\xc3\xc8\x7f\x65\x19\x5c\x4d\x3e\x07\xab\xd5\xa3\xc6\x7e\x31\x00\x23\x75\xa4\x51\x7c\x2a\x02\xf5\xa3\x62\xed\xd5\x82\xd3\x7d\xea\xab\x8a\xb9\xee\x34\x55\x90\x6a\xf3\xbd\x3d\x3a\xf7\xd7\x3c\xe7\x44\x90\xd5\xd5\xe4\xf3\x50\xa5\xc5\xa3\xe6\xa1\x53\x9f\xb1\x86\x50\x57\x9c\x57\x9a\x6d\xb8\xe6\x97\x85\xcc\x2f\x77\x35\x33\xab\x2d\xca\x6d\x05\xb0\x43\xb7\xce\x94\xdb\x0c\x93\xa2\xef\xf5\xad\x73\x93\xdc\xca\x74\xba\xdc\x65\xbb\xf2\x9b\xef\xb7\xdc\x6c\x87\x5a\x25\x92\x87\x7f\xa8\xb4\x55\x01\x84\x9e\x5d\x07\x7a\x7e\x3b\x34\xbb\x74\x56\x18\x7b\x15\xde\xf0\xbc\x2e\x1a\x7e\x43\xb7\x07\x65\xb9\xc9\x47\xa7\x2d\x7b\x67\x4e\x5b\x4c\x07\x25\xf1\xfe\xac\x3d\x28\x4d\x7f\x70\x5e\x7e\xe3\x98\x6e\xb8\x61\x5b\xd6\xa9\xdb\xfa\xce\x75\xd4\x81\x05\x05\xe6\xaa\x6b\xde\xdc\xb6\x8f\x22\x6f\xab\xf7\xf2\x40\x6c\x11\x9f\x01\xc9\x32\x4c\x23\xaf\x5e\xeb\x83\x9d\xb6\xfe\xc3\xc9\xeb\xb6\xb2\x8f\x23\xb5\xfa\xc6\x3e\xda\xf0\x07\x35\x87\xbd\x8a\xed\xa8\x16\xdd\x75\xe2\x10\x50\xbf\x2b\xd8\xd6\x19\x29\x18\xa1\x58\xc7\x96\x5b\x50\x7e\xeb\x18\x32\x26\xf1\x66\x6e\x8e\x49\xfc\xa5\xe7\x90\xfd\x78\x5f\x76\x10\xe9\xc6\xfd\x92\x93\x48\x37\xda\x43\x8e\x22\xae\x23\x48\xdc\xb1\xa1\xc6\x44\xcd\x96\x8a\x60\x1d\x49\xf9\xd4\xdc\x3e\x63\x12\xfb\xbb\xa9\x6a\x7f\x76\x10\xda\xae\xe9\x20\x69\x5a\xec\x6f\xa6\xc8\x98\xc4\x5c\xd1\xfa\xae\x0b\x76\x01\x03\x3d\x6e\xda\xf3\x4c\x6b\xd6\xd4\x45\xcf\xcc\x52\xef\xb2\xa8\x39\x4b\x15\x6a\x41\x0d\x4f\xf8\x27\xe5\x82\xa6\xb1\x1e\xaa\xba\x67\x27\x0b\xc3\xd3\xec\xd1\xae\x3f\xbe\x74\x8f\x57\x16\xd0\xcf\x33\x5e\x19\x8b\x0f\x99\xaa\x0e\x66\x79\xe0\x30\x65\xf9\xef\x38\x4c\x1d\x87\xa9\xe3\x30\xf5\x6f\x18\xa6\xcc\x66\xff\x0e\x47\xd5\xe3\x04\xf5\x4f\x4c\x50\xf0\x5f\x9a\xa0\xbe\x5f\x32\x1e\xe7\xa6\xe3\xdc\x74\x9c\x9b\x8e\x73\xd3\x4f\x36\x37\xd9\xb3\xcc\xae\xb9\xe9\x1c\x13\x6c\xcc\x4d\x91\x5a\xa8\xbf\x41\x75\x8f\x4b\x16\xab\xe7\x83\xf7\x4d\x27\x9c\x7d\x9f\x36\xd7\x92\xf5\x7c\x50\x6e\xf8\xc7\xfe\xe6\x6c\x0f\x08\xd2\x5b\x1f\x6d\x47\xd9\x56\xec\x72\xd4\x07\x42\xc5\xbb\x54\xd0\x44\x91\x6a\xae\xe8\x50\x97\x6d\x05\xf9\xee\xce\xfb\xea\xef\xc2\x60\xf9\x6f\x9b\x49\xcf\xd8\x3c\x93\xbf\x9d\x0e\xfd\x3b\x00\x00\xff\xff\xdd\xfa\xa4\x1b\xae\x24\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9390, mode: os.FileMode(436), modTime: time.Unix(1538638943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x73\xdb\x36\xf2\x7f\x4d\x7e\x0a\x94\xff\x36\x25\x53\x85\xfc\xe7\xdd\x8d\xe7\x7c\x1d\xd7\x76\x53\x4f\x53\xdb\x67\x3b\xcd\x8b\x4c\x26\x85\xc9\x95\xc4\x98\x02\x58\x00\xb2\xe2\xaa\xfa\xee\x37\x8b\x05\x28\x50\x96\x14\xa9\xc9\xf4\x6e\xee\x9a\xc9\x8c\x49\x60\xb1\xd8\x87\xdf\x3e\x00\x54\x51\xb0\x7f\xd0\x3f\x76\x72\xc1\xce\x2f\x6e\xd8\xe9\xc9\xd9\x0d\xbb\xf9\xe1\xec\x9a\x7d\x7f\xf6\xf2\x94\xfd\xbd\xfb\x17\x17\x05\xbb\x19\xd7\x9a\x0d\xeb\x06\x58\xad\x19\x9f\x1a\x39\x02\x01\x8a\x1b\xa8\xd8\x7d\xcd\xd9\x2f\x7c\xa6\x9f\xc9\x16\x47\xa4\x62\x7e\xee\x17\x5c\x79\x36\x64\x0f\x72\xfa\x75\xc5\x9a\xfa\x0e\x98\x19\x03\x2b\xc7\x5c\x8c\x80\x71\xf1\x60\xc6\xb5\x18\x31\x7e\x2b\xa7\x86\x99\x6e\x87\x09\xbf\x03\x06\x55\x6d\x34\x33\xd2\xae\xc8\x0d\x4c\xda\x06\xb9\x91\x08\xc2\x8e\xb6\x77\xa3\xa2\x94\x15\x8c\x40\x14\x5c\x6b\x30\x9a\x55\xb5\x82\xd2\x48\xf5\x90\xc7\x71\xcb\xcb\x3b\x3e\x02\x36\x9f\xe7\xd7\x2d\x94\xf9\x15\x68\x39\x55\x25\xe4\xe7\x7c\x02\x8b\x45\x1c\xd7\x93\x56\x2a\xc3\xd2\x38\x9a\xcf\x9f\xb1\x7a\xc8\x88\xee\x4c\x1f\x4f\xb5\x91\x93\xfa\x37\xa8\x16\x8b\x38\x62\x13\x30\xfc\xfe\x39\x4b\xee\xfe\xa6\xf3\x5a\x16\xbc\xad\x27\xbc\x1c\xd7\x02\xd4\x43\x81\x32\xf0\xb6\xd6\x05\x12\x15\xf7\xcf\x93\x38\x4a\x46\xb5\x19\x4f\x6f\xf3\x52\x4e\x0a\x3e\xd3\x0d\xbf\xd5\xf8\xf7\x99\x06\x75\x5f\x97\xd0\x99\xc9\xae\x1d\x43\xd3\x82\xd2\x09\xc9\x00\xc2\xee\x98\x28\x18\x36\x50\x9a\x24\xde\x93\x5b\x29\xc5\xb0\x1e\x25\x2b\x0a\xfd\x73\x0a\x53\x54\x98\x31\xc6\xf6\x62\xf7\x2b\x2e\x4c\xec\xba\x52\x2a\xe8\xdb\xa0\xc0\x21\xab\xf1\x2a\xdf\x9a\x8b\x52\x36\x30\xe1\xa2\xd0\x46\x95\x5c\x3b\x1e\x89\x36\xaa\x16\xa3\x15\x65\x65\x7b\x57\x9b\xde\xfa\x72\xac\x6a\x6d\x64\x3b\x06\x35\x86\x5a\x14\x5e\xa6\x67\x77\xb5\x49\xe2\x88\xb7\x35\x7c\x30\x20\x74\x2d\x85\xbe\x7f\x7e\x0b\x86\xf7\x04\x5b\x4e\x3e\x43\xcf\x80\xba\x07\xb5\xf4\x53\x8f\xa0\x70\xcb\xd1\x6b\x8e\x41\xd9\xd4\x20\xcc\xb3\x91\x2c\x8c\x94\x8d\x2e\x4a\x5e\x8e\x01\x1d\xc1\x67\x9a\xb7\xf5\x7e\x06\xb4\x3b\xae\xce\xe4\x7c\x86\x26\xe0\x33\xfd\xf3\x73\xde\xb4\x63\x94\xfe\xb3\x30\x2d\xee\x1d\x3f\xe2\x4e\x9a\xec\xc7\x9b\xd6\xb8\x3f\x1a\x4c\x71\x0f\x0a\x2d\x05\x55\x61\x1e\x5a\xa8\x3e\xba\x6f\x0f\x78\x3e\x8e\xb8\x41\x63\xe7\x97\x14\x90\x16\x89\x89\x8f\xca\x4d\x34\x3d\x90\x64\x31\xc6\xbe\x0f\x60\x4c\x41\x18\xff\xf2\xf6\x3d\x94\x86\x69\x23\x15\xb0\x0a\x86\xb5\xa8\x91\x49\x7c\xcf\xd5\x92\xf6\x90\x59\x80\xb9\x7d\xfc\xf0\x3c\x8e\x30\x0b\x1c\x30\xfa\x97\x6c\xc8\x11\xc9\x20\x8e\x2e\x9b\xa9\xe2\xcd\xc1\x06\x3a\x9a\x25\xca\x17\x4a\x4e\x5b\xc7\x92\xd0\x92\xdb\x21\xe4\x35\x88\xa3\x9f\xc9\x94\x07\xc1\xb4\x1b\x1a\xc4\xd1\x75\x29\x5b\x2f\xce\x3a\x80\x5b\x81\x74\xcb\x4b\xb0\x94\xd5\x20\x8e\x7e\xac\x45\xe5\x15\x70\x09\x23\xbf\x79\x68\xe1\x62\x98\x06\xd8\xca\xbd\xc8\x48\xbe\x58\xcc\x17\x99\x65\x95\x66\xb8\xe9\x58\x2a\x63\x19\x1f\xb0\x37\x6f\x29\x3a\xe7\x71\xcf\x85\x9d\xa2\x96\x56\x20\x2d\x7b\x86\x61\x8b\x54\xca\xe6\xf1\xcd\x84\x48\x17\xa1\xcd\x96\xd6\x5c\xfa\x34\x48\x01\x8b\x41\xbc\xb0\x1e\xbe\xf0\x15\x44\x41\xab\x40\x23\x06\x19\x67\xa5\x14\x46\xc9\xa6\x01\xe5\x5d\x3e\x94\xaa\xef\xfd\xd2\x7a\x97\x29\x27\x84\x8e\x11\xad\x4b\x76\xda\xa8\x69\x69\xd8\x3c\x8e\x28\x43\x3a\xab\x3d\xa5\xb7\xfc\xd8\xfe\xb1\x93\x06\x3e\x18\x37\xe9\x70\x43\x63\x41\x44\x69\x30\xac\x7b\xc9\xaf\x29\x20\x7c\x3c\x78\xb3\x9f\x09\x03\x6a\xc8\x4b\x88\x23\x23\xdb\xba\x3c\xba\x3a\xb7\x5c\xc9\xc8\x4e\xdd\x73\x98\x75\x22\x96\x0a\xb8\x81\x50\x57\x54\x72\xc6\x4d\x69\x6b\xe4\x56\x6d\xdd\xe2\x2a\x1e\x4e\x45\x19\x72\x4d\x9d\xba\x7d\x45\x07\xcc\x2b\xda\xd7\x71\xc0\xfe\xa0\x8e\x19\x7b\xda\xe9\x31\x8f\x23\x05\x66\xaa\x04\x7b\xe2\xc7\xe6\x71\xe4\xec\xee\xe1\x4a\x6f\x03\x1a\xc7\xad\x0f\xba\x71\x2b\x48\x1c\xf5\xcc\x7d\xd0\x13\x6c\x10\x47\x0b\x67\xc0\x6b\xc3\x95\x79\x8d\x36\x22\x4b\x81\xb6\x56\xab\x85\x36\x5c\xa0\x61\xe4\x90\x5d\x90\xe5\xae\xd7\x5b\x8e\x8b\x8a\xf1\xd2\x68\x26\x6d\x4f\x31\x21\x13\xa6\xe5\x52\xa3\x2c\xd8\x25\x15\x3e\x0a\x9d\x23\x07\xe8\x91\xf6\x78\x6c\x7b\x1a\x07\xb3\xf9\x22\x63\xa0\x94\xb7\x05\xed\xf4\x03\x17\x55\x03\x4a\xb3\x83\x43\x66\x4b\x4a\x17\x30\xa7\xf7\x20\x8c\x9b\xfe\x7e\x2a\x4a\x8d\xe6\x3a\xaa\x2a\x7c\xb6\x66\x29\x73\x29\x8e\x2a\x8c\xf8\xe8\x55\x5b\x71\x03\x34\x83\xc3\xf4\x8e\x33\x27\xd0\x40\x38\x43\xef\xd6\x54\xeb\x9b\x81\xc8\x16\xf7\xd2\xa8\x06\x45\xb2\x2f\xf9\x39\xcc\xd2\x32\x2f\x3d\x48\x72\xef\x0e\x56\xe6\x3d\x07\xb0\xe7\x59\x1c\x95\xb9\x07\xf6\x80\xbd\xa3\xff\xcc\x31\x42\xae\xf9\x15\x8c\x6a\x6d\x40\xa5\x9b\x93\x2b\x7b\xb2\x35\x51\xc5\xd1\x48\x06\x0c\x03\x37\x90\xb8\x81\xd1\x52\xab\x16\x99\x43\x65\xde\x2b\x59\x98\x6f\xac\x2f\xcc\x31\x15\x45\xf4\x42\x4f\xa7\xfc\xea\xf4\xfa\x86\x26\xd3\x2c\x8e\x08\x4d\x0a\xe9\x28\x44\xce\x61\xf6\x9a\xc6\x52\xaf\xc6\x80\x75\x68\x18\xb0\x55\x3f\xdb\x11\xb7\x1b\x29\xe2\x58\xe6\xa4\xc1\x56\xcd\x97\xf2\x77\xc1\x24\xea\x06\x31\xbf\xd6\x95\x45\xc1\x42\xf5\xd9\xac\x6e\x1a\x66\xb8\xeb\xb6\x27\xa0\x35\x1f\x61\x64\x28\x39\xb1\x23\xd6\x7a\x16\xf9\xad\x92\x25\x68\x1d\x20\x3f\x64\xb4\x29\x7b\x4c\xf4\x88\x3d\x25\x17\xfc\x44\xcc\xbf\x93\xd5\x43\x00\xfa\x46\x8e\x46\x64\x3c\xb7\xf2\xa5\x1d\x88\x23\xac\xcc\x68\xb4\xc0\x74\x3e\x23\x46\xf5\x10\x19\xe7\x76\x6f\x7e\xdb\x00\x32\x8a\x90\x8c\x1d\xda\x09\x6f\x76\x04\x8f\x9b\x21\x06\x34\xdd\xd5\xc7\x38\x5a\x30\x68\x34\xad\x27\xff\x5e\x23\x66\xdf\xa1\x3c\xcb\x9c\x76\x0e\xb3\xef\xa5\x22\x95\x9c\xa2\x84\x01\xfb\x98\xc5\x51\x17\xba\x7a\x80\x9a\x59\x6d\x3c\xb7\xce\x63\x54\xfe\x09\xcf\x69\x92\x64\xf9\xcb\x5a\x9b\x94\x0e\x0c\xf6\xf9\xa2\xb5\x7d\x8d\x45\x33\xaa\x88\x9c\xbe\x38\x44\x77\x5a\xf9\x9c\xa9\xf2\xd7\xb5\x19\x9f\xa2\xf9\x52\x50\x2a\xcb\xe9\x31\x21\x83\x8e\xc0\x18\x2c\x01\x9b\x7b\x0f\xe4\xed\x81\x02\x4a\xc5\x11\x46\x7d\x84\x99\xf0\xdd\x12\x99\xa8\x00\x15\xec\x4e\xb1\xfc\xcc\xc0\x44\x93\x20\xf5\xb0\x1b\xc7\x48\x33\x53\x8d\x7f\xca\xbb\xb3\x13\x76\x48\x16\xbe\xe4\x4a\x43\xe5\x3c\xfe\x26\xa1\xd9\x2a\x79\x4b\xeb\xbd\xab\x54\x18\xe4\xdd\x84\xf7\x54\x6f\xd6\xb9\x8b\xa4\xc5\x36\x20\xb6\x28\xb0\x8c\xbe\x38\x64\x49\xc2\x9e\x3c\x09\x80\x42\x43\xb8\x19\x17\x42\x1a\x6a\x18\x51\xab\x09\x6f\xdf\x10\x8a\xba\x1e\x26\x8a\x22\x27\xe0\x49\x72\xb0\x55\xfa\xc1\x92\x16\x65\xda\x42\x6d\xa7\x1d\xbd\xf7\x01\xf6\x5b\xeb\x97\xf4\x28\xec\xaa\x05\x21\x60\x0b\x2d\xd9\x3d\x79\x8b\x16\x4f\xae\x2e\x5e\xbe\xfc\xee\xe8\xf8\xc7\x77\xc7\x17\x3f\x5d\xbe\x3c\xbd\x39\x25\xdd\x23\x79\xfb\xbe\x03\x64\x65\xb3\xbc\x95\x2e\xf5\x69\x7b\x25\xbe\x06\x5b\xb5\xcf\x9c\xeb\x57\x61\xd9\x47\x93\x15\x3d\xf2\x41\x02\xa5\x54\x15\xa8\xfc\x88\xbc\x00\x95\xad\x60\xc3\xd4\x0a\x16\xb8\x66\xe0\x0e\x8d\xb9\x9d\x47\x3b\xbc\xe6\x4a\xb8\xa2\x69\x8f\x85\xf9\x8d\x3c\xe6\x13\x68\x52\x77\x30\xcc\x6f\xe4\x4b\x39\x03\x95\xee\x60\xa3\x2c\x5b\xab\x59\x9f\xec\x0a\xb8\x96\x82\xd4\x74\x59\x61\x0f\x0f\x9c\x9c\xa2\xd9\xb7\xd9\x7f\x6a\x13\x25\x2d\xfa\x63\x0e\xd8\x41\x89\x9d\x88\x42\x4d\xff\x47\x1c\x1a\xa1\x8e\x87\xac\x16\xa5\x82\x09\x08\x73\x25\x9b\xe6\x96\x97\x77\xc7\x72\x2a\xcc\x26\x6f\xec\x61\x9f\xa0\x8c\xfc\xe5\xf4\xc0\xe9\xe7\x52\x4d\x78\xf3\x6f\x0a\xe2\x98\xca\x44\xaf\x2b\x0a\x7a\xbc\x35\xdd\xbb\x6d\x9e\x51\x2d\x56\xfb\xf3\x0a\x76\xe8\xf3\x38\xb2\xc5\x43\xde\xbe\xcf\xd3\xa7\x9b\xbb\xb1\x2c\x3f\x01\x68\x8f\x65\xfb\x90\x62\x3b\xe6\x1a\x30\x21\xcd\xfa\x3b\x8e\xa3\xaa\xb2\xf7\x1b\xf5\x90\x69\x5f\x47\xfb\xea\xd8\xd4\x92\xb0\xdf\x7f\xdf\x4a\xb0\x26\xf7\xd8\xb3\xc0\xd0\xf6\xae\xfd\x46\x1d\x7d\xd4\x35\xe3\x99\xa5\x93\x53\xd3\x4e\xcd\xb2\x71\x19\x9a\xfc\xd8\x9e\x11\xa9\x56\x10\xd1\x2a\x62\xdc\x19\x2c\xef\x35\x6d\x6b\x5b\x93\xa1\xef\x4d\xec\xc1\x73\x6d\x73\x42\x3d\x11\xfb\xfa\x2b\xfd\x75\x32\x60\xda\xbe\x67\xb1\xbf\xad\x40\xef\xd9\x17\xba\x95\x5c\xdd\xf3\x4c\x0c\xe5\x30\x4d\x78\x55\x41\xb5\x95\x35\x9b\xd5\x66\xcc\xb4\x6b\x54\x7a\x9b\x0d\x5c\x67\x99\x3e\x25\x63\xb8\x76\xa6\xca\xb2\x6d\x5b\xde\xd7\x30\x63\xdc\xb0\xb1\x31\xad\x3e\x28\x8a\x52\x0a\x2d\x1b\xc0\xb3\x42\xce\x27\xfc\x37\x29\xe8\x8a\xb2\x91\xd3\x6a\x88\x81\x80\x6e\x2f\xc6\x72\x02\xdf\xfe\x5f\x61\xe5\x28\x2a\x30\xbc\x6e\xbe\x25\xa1\xaa\xc3\xaf\x74\xb2\x45\x94\x38\x8a\xde\x91\x9b\x56\x13\xcb\xd2\xbd\x5e\x9d\x65\xd3\xb4\x91\xe1\x80\x25\xc7\x57\xa7\x47\x37\xa7\xef\xce\xce\xdf\x5d\x5e\x5d\xbc\xb8\x3a\xbd\xbe\x4e\x06\x2c\x49\x36\xf4\x9f\xbb\x78\xdb\x3b\xdb\xca\x87\xce\xd6\x14\xbe\x14\x90\xe8\x43\x3a\x66\x35\x1a\xe8\x66\x68\x73\x64\x84\x6a\xf5\x4e\x67\x9b\x62\x97\x8e\x22\xa9\x6c\xaa\x0b\x4c\x4c\x02\x66\x17\x6b\x22\x59\x4a\x1b\xca\x96\x68\xf7\x68\x8e\x84\x5d\x46\x3c\xf7\x49\x02\x36\x01\xec\x17\xbc\x68\x69\xca\x44\x42\x66\xd6\x66\x1f\xcf\x25\xa4\xbb\x4f\x27\xee\x4b\x41\x7e\xa6\xad\xb3\x8f\xe5\xa4\xc5\xe6\x2f\x95\x1b\x24\x19\xb0\x21\x6f\x34\x64\xd8\x44\x7f\xe1\xef\x07\x51\x8d\xd3\x5f\xa7\xbc\xc1\x65\x5e\x47\x4c\xea\x8b\xc5\x00\x75\xea\x0f\x65\xdb\xb2\x8e\x94\x3b\xa5\x9d\x57\x1e\xd4\xe5\x9d\x53\xfd\xb3\x24\x9e\x0e\x8b\x1f\xcf\x0e\x02\x66\xac\xe5\x8a\x4f\x34\xfb\xea\x9b\x7b\x7b\xee\x95\x4d\x85\xcf\x89\xd5\x99\xa2\x4b\x48\x54\x69\xdf\x0c\x45\x21\xbb\x4b\x8e\x72\x12\xb8\x14\xd5\x6d\xfb\x5f\x92\xa3\xa4\xd7\xc7\x3d\x7c\x34\x4b\xbd\xba\x3c\xf9\xd3\xb3\x14\x63\x3b\xa4\x29\x1f\x74\x2b\x48\x47\xe8\xee\x90\xae\xe8\xda\xed\x4f\xeb\x36\x68\x3b\xd4\x66\x97\xc6\x20\x0a\xc2\xf2\x24\x38\x39\x66\xf1\x1a\x9b\xef\x15\x8d\xf6\x1c\xba\x47\x1b\xe0\x3b\x53\x6a\xe6\x36\xc0\x9c\x0e\xb7\xdb\x63\x2b\xe4\xb9\x83\x73\xbd\xbd\xb6\x95\xa1\x78\xdb\xc7\x60\xeb\xf4\xad\x27\x8e\x47\xb7\x65\xf6\x3a\xc3\xdf\x16\xaf\x5e\x7b\xed\x72\x69\xf6\x09\x77\x58\xaa\xbb\xaa\xdc\xed\x06\x6b\x79\x4c\xca\x5f\x80\x49\xe9\x50\xe3\x6e\xb3\x5e\x40\xef\x32\xeb\x31\x62\x3e\xdb\x55\x56\x78\x6a\x71\xf7\xb6\x96\x0a\xc3\xc2\xde\x62\xf9\x55\x61\x2d\x0f\x89\x1c\xf3\xd0\x3b\xc1\xdd\xd3\x06\x8a\x6f\x9e\xc7\xf1\x32\xcf\xed\x6e\x28\xd7\xa1\x84\xdc\xff\xa8\x79\xba\xd4\xe5\x99\xad\x31\xc7\xca\x85\xb0\x05\xe4\x9a\x13\xe9\x7e\x30\x1c\x74\x2d\x74\xf0\x8e\xdd\x8c\x7f\x55\xf6\x0c\xd6\x81\x76\x5b\x0a\x1b\x10\xa4\xb3\xbf\x30\xbd\x06\xd3\xa2\x6e\x06\x9f\x04\xec\xf5\x3d\xa7\x73\xd7\x2e\xc4\x74\x9a\xb6\xe1\x80\x0f\xeb\x97\x74\x37\xbf\x1e\x17\xd4\xf4\x6e\x6a\x41\x75\xbf\xe1\xb4\xe5\x23\xa8\x47\x0e\x81\xe1\x46\xbe\xd6\x53\x63\xa0\x7b\x1d\x23\x3a\x85\x86\xd3\x4f\xbf\x34\x77\x1b\x24\xfe\xf2\x20\xf8\x6e\xfd\x65\xab\x64\x8b\x9b\x92\xdf\x2e\x5c\x8f\x52\x8e\x61\xc2\xf3\x4b\x25\x5b\x50\xa6\xf6\x5f\xb1\x5d\x51\xb0\x6b\xf2\x1b\x98\xb4\x0d\x37\xfe\x07\x42\xd1\x7c\x4e\xe3\x3f\xc2\x03\xe2\xdf\x22\xda\xdb\x6a\x49\x9b\x26\x9e\xce\x8d\xd1\x37\x30\x4f\x78\xc2\x0d\x9f\x5f\xdc\xbe\x3f\x58\x31\xd4\xb1\xfb\x72\x4a\x66\x5c\x84\x5f\x26\xac\xcb\x9c\xdc\x9e\xf7\xb5\xfd\x06\x69\x25\x61\x87\xac\x27\x99\x53\xc3\xd7\xc8\x3d\xd8\x38\x2b\xbe\x79\xa4\x81\x25\x48\xde\x7a\xce\xa2\x5a\xee\xe2\x3e\xed\xff\x67\x27\xd5\x7e\x3c\xee\x07\x71\xd2\x49\x3f\x88\xf2\xa8\xaa\xec\x2f\x4f\x78\xe3\x63\x4d\xaf\x45\xfd\x5e\x70\xc6\x2e\xc8\xeb\x80\x9b\x84\x2a\x78\x3c\x07\xf5\xa0\x0f\x9a\xb0\x3a\x3c\xfe\x48\xf0\x69\xc5\xe1\xaf\xf4\xff\x99\xd2\xff\x96\x1c\xe9\xf2\xa3\x0b\x9b\x5d\xfa\xf5\xb5\x3b\x2c\xd7\xbf\xe6\xb5\x79\x25\x4c\xdd\x58\x16\xc4\xad\xa2\xf2\xd2\x83\x0f\x2d\xf6\xd0\xd9\x0e\xee\x47\x30\xd2\x6c\xdb\xd1\x86\xa1\xf5\x02\x74\xfc\x89\x20\x08\xae\xce\x08\x06\xfe\x4e\x6d\x57\x20\x3c\xea\xc1\xba\x5f\x97\xad\xab\xd9\x78\xa2\x58\x1e\x21\xd6\x18\xd0\xff\xa2\x06\x8b\x8b\xf6\x8f\x07\x87\xcb\x1f\x61\x2d\xe6\x73\x97\x40\x83\x7a\x15\x7e\xc9\xdd\x89\x75\x77\x80\x84\x5f\x97\xab\xed\xdd\x0e\x4b\x4e\x3f\x18\x50\x82\x2c\x94\x10\xe9\x97\x6a\xe5\x84\x15\x94\x31\xba\x3d\x0e\x17\xb9\x7d\xd2\xe0\xb0\xb9\xf6\xa6\x32\x09\x19\x87\x0c\x6c\xf5\x9b\xcf\xd3\x5a\x54\xf0\x21\x90\xef\x52\x2a\xa3\xd9\xff\x67\xf6\x61\x81\xfe\xe8\x4c\x74\xc8\x78\xdb\x82\xa8\x52\x3f\x82\x0c\x56\xc5\xee\x1d\xe8\xfa\x8f\xbb\xfa\xa4\xe3\xb8\x95\xee\x90\x79\x31\xbc\xb7\x3e\xee\x78\x82\xf0\x4f\xbc\xc5\x6d\xc8\x74\x13\x7c\xf9\x4c\xce\xef\xb1\x5f\xe7\x53\xec\x32\x36\x7e\x33\x0f\xb6\xab\x0d\x4c\x90\x6e\xb9\xde\xae\xf4\xbf\xe8\xb3\xf3\xd4\x55\x24\x07\xac\x1b\xf8\x99\x37\x53\xf7\x43\xbf\x7e\x13\xb0\x13\xba\x3a\xe1\x3f\x8a\xa9\xf5\x7a\x65\xfe\xe7\x7d\xd6\xa2\x1d\x56\x96\x63\xbb\xa0\x65\x77\xef\x6d\x05\x49\x40\xe9\xab\x1f\x4a\xd0\x01\x65\xf7\xae\xa8\x97\xbb\x56\xfa\xa2\x1d\x72\x95\xbf\xcb\x7c\xf4\xad\xec\x5f\x01\x00\x00\xff\xff\xe9\xd1\x82\xa9\x01\x30\x00\x00")

func operatorGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_operatorGoTempl,
		"operator.go.templ",
	)
}

func operatorGoTempl() (*asset, error) {
	bytes, err := operatorGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "operator.go.templ", size: 12289, mode: os.FileMode(436), modTime: time.Unix(1538901658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x8e\xdb\x36\x10\x3d\x8b\x5f\x31\x15\x02\xd4\x2a\xbc\x22\xf6\x56\x04\x4d\x0f\x6d\x36\x89\x91\x60\xb7\xc8\x1a\xc8\xb1\xa1\xa5\xb1\x34\x30\x45\x12\xe4\xc8\x8e\x21\xe8\xdf\x0b\x92\xb2\x03\x6c\x91\xee\x56\x17\x4a\x23\xce\x7b\xf3\x1e\x67\x28\x25\xfc\x9e\x1f\x78\xfb\x00\xf7\x0f\x5b\xb8\x7b\xbb\xd9\xc2\xf6\xc3\xe6\x11\xde\x6d\x3e\xdd\xc1\x6f\xd7\x47\x48\x09\xdb\x9e\x02\xec\x49\x23\x50\x00\x35\xb2\xed\xd0\xa0\x57\x8c\x2d\x1c\x49\xc1\x57\x75\x0a\x37\xd6\xc5\x88\xf5\x37\x8d\x6d\xb1\x43\x03\xce\xdb\x06\x43\xf8\x1a\x01\x36\x7b\x38\xdb\xf1\xe7\x16\x34\x1d\x10\xb8\x47\x68\x7a\x65\x3a\x04\x65\xce\xdc\x93\xe9\x40\xed\xec\xc8\xc0\x57\xa2\x41\x1d\x10\xb0\x25\x0e\xc0\x36\x65\xd4\x8c\x83\xd3\x11\x2d\x57\x62\x52\xd4\x1d\x3a\xb9\x30\x4a\x15\x02\x72\x80\x96\x3c\x36\x6c\xfd\xb9\x16\xc2\xa9\xe6\xa0\x3a\x84\x1e\xb5\x43\x1f\x84\xa0\xc1\x59\xcf\xb0\x12\x85\x3a\x85\x46\x13\x1a\x86\xb2\x23\xee\xc7\x5d\xdd\xd8\x41\xaa\x53\xd0\x6a\x17\xe2\x7a\x13\xd0\x1f\xa9\xc1\xab\x34\x99\xc8\x52\xce\xb2\x04\x64\x79\x44\x1f\xc8\x1a\x6c\x25\x9f\x1d\xb6\xf2\x69\x56\xad\x4e\x41\x1e\x6f\x95\x76\xbd\xba\x2d\x45\xf1\xff\xd8\xac\xd9\x53\x57\x8a\x62\x40\x56\xc7\x5b\x28\x0f\xbf\x86\x9a\xac\x54\x8e\x06\xd5\xf4\x64\xd0\x9f\xd3\x46\xe5\x28\xc8\xb8\x49\x1e\x6f\x4b\x51\x89\xe8\xd3\x3d\x9e\xe0\x0b\x69\x0d\x1e\x79\xf4\xe6\x62\x42\x34\x74\x87\xe0\xa2\x5d\x2d\x90\x59\xfc\x4d\xf6\x2a\xc6\x20\xf6\xa3\x69\x62\xf2\xaa\x82\x0f\x4b\xca\x24\x8a\x05\x64\x89\x4c\xa2\x00\xf8\x38\xee\xd0\x1b\x64\x0c\x9f\x31\xd8\xd1\x37\x78\xaf\x06\x7c\xfd\x83\xf8\x5a\x14\xc5\x34\xdd\x80\x4f\x27\xff\x8a\x4c\x8b\xdf\xd6\xf0\x0a\x35\x0e\xf1\x14\x5e\xbf\x81\x7a\xc3\x38\x04\x98\x67\x51\x14\xef\x91\xa7\xe9\xf2\xb3\x7e\x74\xd8\xd4\x1f\xc9\xb4\xf3\xfc\xc7\x39\x93\x3c\xb3\xe1\xc2\x86\x31\x24\x8a\x59\xcc\xc9\x93\x8b\xa0\x16\xf7\x64\x30\x80\xd2\x3a\xa9\xcf\x71\x88\xd2\x99\xac\x09\xc0\xbd\x62\x50\x1e\x01\xbf\x39\x1b\x8d\xfa\x97\x4d\xf1\xb8\xaf\x78\x81\xfd\xd8\x30\x4c\xe2\x47\xae\x24\xe8\x55\x60\x4f\xa6\xab\xe0\xf2\x22\x5e\xee\xc8\x33\x7a\x33\xfe\x2f\xb9\x61\xea\x3f\xd3\xb2\x86\x4c\x73\x59\x2b\x58\x91\x61\xf4\x7b\xd5\xe0\x34\xaf\x01\xbd\xb7\x7e\xa9\x21\xfb\x34\x0b\xf1\xd2\x82\xa4\x7c\xee\x08\xe0\x14\x9b\x6f\x4f\xa6\x4d\xce\xf9\xc5\x0d\xd8\x9d\xc1\xa8\x01\x73\x9f\x3d\x83\xb1\xca\x82\xe0\xa9\xb0\x08\x70\x55\x17\x3f\x82\x53\x0d\xfe\xa7\xce\xd8\xc4\xda\x76\x1d\xfa\x28\x64\xc1\xfb\x94\x02\xa2\xc8\xf3\xfc\x88\xbc\x86\xbf\xe3\xef\xeb\xed\x50\xdf\xe3\xe9\x9d\xf5\x99\x77\xa9\xa6\xfe\x7c\xf7\xb8\xcd\x91\x2a\x0e\x46\xd6\x95\x78\x12\xf4\x05\xab\x7e\xaa\xec\x2f\x3d\x7a\xa5\xa3\xae\x79\x5e\x5d\xab\xae\xea\xf7\xc8\xe9\x73\x0d\x79\xce\x63\xe0\xc1\xa5\x46\x9c\xe6\x4a\x14\xb4\x4f\xd8\x3f\xbd\x01\x43\x3a\xea\x58\x84\xd4\x5f\x88\xfb\xbb\xa8\x6e\x85\xde\x57\x75\x7e\x2d\x93\x5e\xe8\x90\x39\x5e\xad\x21\x76\xb3\x75\xd4\x94\x95\x28\x2e\x63\x5c\x96\xa9\xdc\x38\x18\xd7\xd1\xfe\x2e\xc4\x90\x16\xb3\xf8\xde\x16\xff\x04\x00\x00\xff\xff\xe5\x13\x3f\x32\x30\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1584, mode: os.FileMode(436), modTime: time.Unix(1538540481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(436), modTime: time.Unix(1538540481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-service-operator.yaml.templ": awsServiceOperatorYamlTempl,
	"base.go.templ": baseGoTempl,
	"cft.go.templ": cftGoTempl,
	"operator.go.templ": operatorGoTempl,
	"template_functions.go.templ": template_functionsGoTempl,
	"types.go.templ": typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"aws-service-operator.yaml.templ": &bintree{awsServiceOperatorYamlTempl, map[string]*bintree{}},
	"base.go.templ": &bintree{baseGoTempl, map[string]*bintree{}},
	"cft.go.templ": &bintree{cftGoTempl, map[string]*bintree{}},
	"operator.go.templ": &bintree{operatorGoTempl, map[string]*bintree{}},
	"template_functions.go.templ": &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ": &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

