// Code generated by go-bindata.
// sources:
// assets/cft.go.templ
// assets/controller.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\x9b\xc8\x13\x7f\x0d\x9f\x62\xfe\x56\xd5\x3f\x44\x0e\xbe\xbe\xb5\x2e\x27\xf5\x9a\x3e\x44\xad\x92\x2a\x76\xdb\x17\x51\xd4\xae\x61\x8c\xb7\xc1\x2c\xc7\x2e\xf1\xf9\x2c\xbe\xfb\x69\x1f\x30\x0b\x36\x76\xdc\xf6\xda\xeb\xc9\xa8\x95\x61\x99\xf9\xcd\xe3\xce\xec\x84\xc1\x00\x7e\xd3\x17\x9c\x5f\xc1\xe5\xd5\x18\x9e\x9f\x5f\x8c\x61\xfc\xea\x62\x04\x2f\x2e\xde\x3c\x87\x5f\xd7\x97\x3b\x18\xc0\x78\x46\x39\x4c\x69\x82\x40\x39\x90\x42\xb0\x18\x53\xcc\x89\xc0\x08\xee\x29\x81\x4f\x64\xc1\x4f\x59\x26\x57\x58\x7e\x1a\xb2\x08\x63\x4c\x21\xcb\x59\x88\x9c\x7f\x92\x00\x17\x53\x58\xb2\xe2\xff\x11\x24\xf4\x0e\x41\xcc\x10\xc2\x19\x49\x63\x04\x92\x2e\xc5\x8c\xa6\x31\x90\x09\x2b\x04\x88\xb5\xa0\x39\xb9\x43\xc0\x88\x0a\x0e\x82\x29\x8e\x40\xe0\x3c\x4b\x24\x9a\xd6\x24\x55\xab\xd9\x5d\x3c\x30\x12\x07\x84\x73\x14\x1c\x22\x9a\x63\x28\x58\xbe\x0c\x5c\x37\x23\xe1\x1d\x89\x11\x56\xab\x60\x94\x61\x18\x5c\x23\x67\x45\x1e\x62\x70\x49\xe6\x58\x96\xae\x4b\xe7\x19\xcb\x05\x78\xae\xd3\xc3\x3c\x67\x39\xef\xb9\x4e\x2f\xa6\x62\x56\x4c\x82\x90\xcd\x07\x64\xc1\xe5\xff\x53\x1e\xdd\x9d\xc6\x4c\xde\xee\x26\xe0\x98\xdf\xd3\x10\x07\x61\xc2\x8a\x68\xca\xf2\x39\x11\x94\xa5\x3d\xd7\x21\x0b\xfe\xfe\x09\x49\xb2\x19\x79\x02\x2d\xfe\x84\x4c\x0c\x86\x66\x5e\xfb\x72\x20\xad\x23\x19\xe5\x83\xf6\x9b\x40\x8a\xbd\x37\x78\x9b\x1a\xed\x46\x0c\x59\x3a\xa5\xf1\xa1\x5c\x33\x4c\x32\x94\xfe\xf1\x5d\x19\x84\x4b\x5c\x40\x95\x06\x1c\x08\xa4\xb8\x00\x36\xf9\x8c\xa1\x70\xa7\x45\x1a\xca\xf7\x9e\x16\x04\x27\xfa\x37\x78\xa6\x7e\xfa\x5d\xc1\x80\x13\xcb\x47\x41\x45\xf4\x9a\xa6\x51\x59\xf6\x41\xb0\x8c\x86\x4f\xaf\x2f\x81\x8b\x9c\xa6\xb1\x0f\x27\xcf\x1a\x2e\x86\x95\xeb\xe4\x28\x8a\x3c\x85\xc7\xcd\x37\x2b\xd7\x71\x9a\x68\xc3\x2e\x15\xfa\xae\xe3\x68\x65\x87\x8e\xbc\xf4\x7d\xdf\x05\x80\xb5\x02\x43\xd0\x57\xf5\xdc\x77\x9d\xd2\x2d\x95\x4f\x5a\x1a\x45\x38\xa5\x29\x72\x95\xa7\x5d\x36\x87\x53\xc1\x5d\xb1\xcc\xb0\xcd\xcc\x45\x5e\x84\x42\x5a\x65\xbc\x58\x5d\x4d\x6f\xba\x2d\xd3\x76\x39\xd1\xad\x95\x36\x58\xda\x97\x46\xfb\x91\x20\xe1\x9d\x54\x0b\xb4\x1f\xb5\xe2\xa9\x5c\x60\x53\x75\xcf\x25\x05\x4c\x08\xc7\x08\x98\xde\x7f\xad\xad\xaf\x54\x52\xf1\xf7\x78\x3b\x42\x7e\x2d\xc1\xf3\x8d\x68\x2b\x6a\x26\xbf\x82\x9a\x88\x07\x95\xa9\x49\xc1\x05\xe6\x72\xb1\x0f\xbd\x0e\x57\xf6\xfa\xc0\x5b\x06\x07\x9a\x63\xeb\x32\xcf\x48\x88\xbe\x31\xfd\x25\x8a\xab\x42\x64\x85\xe0\xc6\x76\xcb\x5c\x66\x5e\x4c\x73\x36\x57\xcb\xe7\xc8\xc3\x9c\x4e\x50\x29\xca\x21\x24\x49\xd2\x6d\x72\x8d\xec\xf9\xe0\xcd\x49\x76\xa3\x0d\xbf\xd5\x3f\x7d\x50\x55\xc7\x97\x7e\xa8\x04\x0d\xcf\x60\x83\x6e\x55\xba\x0e\x47\xae\x5e\xae\xdd\xf2\xf4\xc3\x68\x84\x9c\x53\x96\xba\x0e\xbf\x0f\xe5\xbb\x66\xd9\x09\xe4\x26\x94\x6c\xbe\xeb\x3a\xca\x9a\x8b\xb4\x12\xd1\xa2\x6c\x1a\xa5\xc8\xe4\xbe\x59\x07\x43\x66\x3d\x59\xc8\xe8\x48\x75\x3c\x3b\x4c\xbe\xaf\xb6\x40\x65\x80\x32\x49\xe9\x79\x1f\xb6\x60\xbd\xc7\x96\x12\xbe\xeb\xd0\xa9\xa2\xfd\xdf\x19\xa4\x34\x91\x2e\xa8\x72\x21\xa5\x89\x82\x91\xb8\x8e\x2c\x36\x4c\x00\x2f\x72\x04\x3a\xd5\x3d\x82\x72\xc0\x7b\xd9\x64\x18\xe7\x74\x92\xa0\xc2\x4a\x30\xf5\xb4\x0e\x5a\x3b\xee\x4b\xe8\x27\xdb\x80\x59\xce\x95\x73\x7a\x29\xd3\x61\xae\x02\x8f\x11\x2c\xa8\x98\x81\x98\x11\x61\x12\x40\xee\x80\x9e\xaf\x4d\x9c\xb2\x1c\x3e\xf6\x65\x4e\x48\x0b\x73\xd5\xc3\x1a\x22\x6f\x7e\xb9\x0d\xaa\x54\x92\x72\x4d\x50\x6f\x4e\x58\x21\xcc\x8b\xd7\xb8\xbc\x85\x33\xb0\x56\xde\x93\xa4\x40\x2d\xc0\xe8\x69\xd8\xb4\x13\x4c\x71\xc9\x91\x08\xed\x48\x58\xd0\x24\x81\x50\x2d\x58\x99\x6a\x14\x47\xe0\x45\x96\x25\x14\x23\xc8\x48\x4e\xe6\xbc\x3b\x3b\x2d\x4c\x99\x9e\x5a\x2a\x9c\xb4\x72\xc3\xa2\xba\xb2\x42\x5c\x67\xee\x57\x66\x66\x38\x55\xad\x5d\x1a\x33\x3c\x5b\xd7\x81\x97\x28\x94\xba\x2f\x2a\x9e\xb1\x21\x5a\xd7\x85\xc3\x6a\x41\xf5\x38\x5e\x66\x58\x96\xc1\x76\xec\x8e\x82\xf1\x60\x5e\x53\x55\xf6\xed\x36\xcb\xa3\x87\x6f\x35\xa7\x12\xf8\xee\xfa\xcd\xd0\xa6\xac\xfd\xa8\xc8\x2e\x99\xa0\x53\x1a\x2a\x89\x4f\xaf\x2f\xf9\x10\x6e\x6e\x4f\x4c\x39\x71\x1d\xc7\x69\xc8\xa8\x1a\x83\xe2\x2c\xfb\x55\x32\x6a\xaf\xaa\xa6\x60\x85\x46\xab\xff\x56\x26\x97\xd7\xbb\xb6\x88\xba\x6a\xb0\x5f\x63\xbd\xc7\x5c\xe6\xc5\x5e\x38\x43\xb7\x0d\xb1\x45\xe2\xbb\x4e\x5a\xb9\xbe\x13\x76\x1d\x9c\x2e\x15\x4d\xe4\x9c\xb0\xee\x35\x9d\x60\x56\x3f\x52\x70\x9b\x6d\xca\x77\x57\xab\x53\x53\x1f\x1e\x09\x96\x49\x28\x2d\xf2\x77\x16\x2d\x83\x51\x38\xc3\x39\x09\xde\xe6\xb2\x75\x0a\x8a\xbc\x2c\x65\x23\x3f\x95\xf5\x6d\xcb\xaa\xc1\x49\x91\xcb\x23\xb7\x84\x6a\xd0\xd4\xac\x26\x33\xe8\x5f\x18\x69\x5e\x29\x3b\x78\x8d\xcb\xb2\x5c\xad\x0c\xbf\x7e\x94\x94\x12\xa9\x57\xaf\x57\x69\x55\x96\x3d\x8d\x88\x09\xc7\x87\xc3\xc8\x7f\x65\x19\x5c\x4d\x3e\x07\xab\xd5\xa3\xc6\x7e\x31\x00\x23\x75\xa4\x51\x7c\x2a\x02\xf5\xa3\x62\xed\xd5\x82\xd3\x7d\xea\xab\x8a\xb9\xee\x34\x55\x90\x6a\xf3\xbd\x3d\x3a\xf7\xd7\x3c\xe7\x44\x90\xd5\xd5\xe4\xf3\x50\xa5\xc5\xa3\xe6\xa1\x53\x9f\xb1\x86\x50\x57\x9c\x57\x9a\x6d\xb8\xe6\x97\x85\xcc\x2f\x77\x35\x33\xab\x2d\xca\x6d\x05\xb0\x43\xb7\xce\x94\xdb\x0c\x93\xa2\xef\xf5\xad\x73\x93\xdc\xca\x74\xba\xdc\x65\xbb\xf2\x9b\xef\xb7\xdc\x6c\x87\x5a\x25\x92\x87\x7f\xa8\xb4\x55\x01\x84\x9e\x5d\x07\x7a\x7e\x3b\x34\xbb\x74\x56\x18\x7b\x15\xde\xf0\xbc\x2e\x1a\x7e\x43\xb7\x07\x65\xb9\xc9\x47\xa7\x2d\x7b\x67\x4e\x5b\x4c\x07\x25\xf1\xfe\xac\x3d\x28\x4d\x7f\x70\x5e\x7e\xe3\x98\x6e\xb8\x61\x5b\xd6\xa9\xdb\xfa\xce\x75\xd4\x81\x05\x05\xe6\xaa\x6b\xde\xdc\xb6\x8f\x22\x6f\xab\xf7\xf2\x40\x6c\x11\x9f\x01\xc9\x32\x4c\x23\xaf\x5e\xeb\x83\x9d\xb6\xfe\xc3\xc9\xeb\xb6\xb2\x8f\x23\xb5\xfa\xc6\x3e\xda\xf0\x07\x35\x87\xbd\x8a\xed\xa8\x16\xdd\x75\xe2\x10\x50\xbf\x2b\xd8\xd6\x19\x29\x18\xa1\x58\xc7\x96\x5b\x50\x7e\xeb\x18\x32\x26\xf1\x66\x6e\x8e\x49\xfc\xa5\xe7\x90\xfd\x78\x5f\x76\x10\xe9\xc6\xfd\x92\x93\x48\x37\xda\x43\x8e\x22\xae\x23\x48\xdc\xb1\xa1\xc6\x44\xcd\x96\x8a\x60\x1d\x49\xf9\xd4\xdc\x3e\x63\x12\xfb\xbb\xa9\x6a\x7f\x76\x10\xda\xae\xe9\x20\x69\x5a\xec\x6f\xa6\xc8\x98\xc4\x5c\xd1\xfa\xae\x0b\x76\x01\x03\x3d\x6e\xda\xf3\x4c\x6b\xd6\xd4\x45\xcf\xcc\x52\xef\xb2\xa8\x39\x4b\x15\x6a\x41\x0d\x4f\xf8\x27\xe5\x82\xa6\xb1\x1e\xaa\xba\x67\x27\x0b\xc3\xd3\xec\xd1\xae\x3f\xbe\x74\x8f\x57\x16\xd0\xcf\x33\x5e\x19\x8b\x0f\x99\xaa\x0e\x66\x79\xe0\x30\x65\xf9\xef\x38\x4c\x1d\x87\xa9\xe3\x30\xf5\x6f\x18\xa6\xcc\x66\xff\x0e\x47\xd5\xe3\x04\xf5\x4f\x4c\x50\xf0\x5f\x9a\xa0\xbe\x5f\x32\x1e\xe7\xa6\xe3\xdc\x74\x9c\x9b\x8e\x73\xd3\x4f\x36\x37\xd9\xb3\xcc\xae\xb9\xe9\x1c\x13\x6c\xcc\x4d\x91\x5a\xa8\xbf\x41\x75\x8f\x4b\x16\xab\xe7\x83\xf7\x4d\x27\x9c\x7d\x9f\x36\xd7\x92\xf5\x7c\x50\x6e\xf8\xc7\xfe\xe6\x6c\x0f\x08\xd2\x5b\x1f\x6d\x47\xd9\x56\xec\x72\xd4\x07\x42\xc5\xbb\x54\xd0\x44\x91\x6a\xae\xe8\x50\x97\x6d\x05\xf9\xee\xce\xfb\xea\xef\xc2\x60\xf9\x6f\x9b\x49\xcf\xd8\x3c\x93\xbf\x9d\x0e\xfd\x3b\x00\x00\xff\xff\xdd\xfa\xa4\x1b\xae\x24\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9390, mode: os.FileMode(420), modTime: time.Unix(1538385198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x73\xdb\x36\xf2\x7f\x4d\x7e\x0a\x94\xff\x36\x25\x53\x99\xfc\xe7\xdd\x8d\xe7\x7c\x1d\x57\x56\x53\x4f\x53\xdb\x67\x3b\xcd\x8b\x4c\xc6\x85\xc9\x95\x84\x98\x22\x58\x00\x92\xe2\xaa\xfa\xee\x37\x8b\x05\x28\x52\x96\x14\xa9\xcd\x65\xe6\x3a\xcd\x64\xc6\x24\xb0\x58\xec\xc3\x6f\x1f\x00\x2a\xcb\xd8\xbf\xe8\x1f\x3b\xbb\x64\x17\x97\xb7\x6c\x70\x76\x7e\xcb\x6e\x7f\x38\xbf\x61\xdf\x9f\xbf\x1a\xb0\x7f\x36\xff\xc2\x2c\x63\xb7\x63\xa1\xd9\x50\x94\xc0\x84\x66\x7c\x6a\xe4\x08\x2a\x50\xdc\x40\xc1\x66\x82\xb3\x5f\xf8\x5c\x1f\xc9\x1a\x47\xa4\x62\x7e\xee\x17\x5c\x79\x3e\x64\x8f\x72\xfa\x75\xc1\x4a\xf1\x00\xcc\x8c\x81\xe5\x63\x5e\x8d\x80\xf1\xea\xd1\x8c\x45\x35\x62\xfc\x5e\x4e\x0d\x33\xcd\x0e\x13\xfe\x00\x0c\x0a\x61\x34\x33\xd2\xae\x48\x0d\x4c\xea\x12\xb9\x91\x08\x95\x1d\xad\x1f\x46\x59\x2e\x0b\x18\x41\x95\x71\xad\xc1\x68\x56\x08\x05\xb9\x91\xea\x31\x0d\xc3\x9a\xe7\x0f\x7c\x04\x6c\xb1\x48\x6f\x6a\xc8\xd3\x6b\xd0\x72\xaa\x72\x48\x2f\xf8\x04\x96\xcb\x30\x14\x93\x5a\x2a\xc3\xe2\x30\x58\x2c\x8e\x98\x18\x32\xa2\x3b\xd7\xfd\xa9\x36\x72\x22\x7e\x83\x62\xb9\x0c\x03\x36\x01\xc3\x67\x2f\x58\xf4\xf0\x0f\x9d\x0a\x99\xf1\x5a\x4c\x78\x3e\x16\x15\xa8\xc7\x0c\x65\xe0\xb5\xd0\x19\x12\x65\xb3\x17\x51\x18\x44\x23\x61\xc6\xd3\xfb\x34\x97\x93\x8c\xcf\x75\xc9\xef\x35\xfe\x3d\xd2\xa0\x66\x22\x87\xc6\x4c\x76\xed\x18\xca\x1a\x94\x8e\x48\x06\xa8\xec\x8e\x91\x82\x61\x09\xb9\x89\xc2\x03\xb9\xe5\xb2\x1a\x8a\x51\xb4\xa6\xd0\xbf\xa7\x30\x45\x85\x19\x3b\x88\xd9\xaf\xb8\xac\x2b\x98\xac\x1f\x84\xe9\x70\xc9\xc7\x4a\x68\x23\xeb\x31\xa8\x31\x88\x2a\xf3\x1c\x8e\x1e\x84\x89\xc2\x80\xd7\x02\x3e\x18\xa8\xb4\x90\x95\x9e\xbd\xb8\x07\xc3\x3b\x86\x5c\x4d\x1e\xa1\x15\x41\xcd\x40\xad\x6c\xda\x21\xc8\xdc\x72\xb4\xb0\x63\x90\x97\x02\x2a\x73\x34\x92\x99\x91\xb2\xd4\x59\xce\xf3\x31\xa0\xd1\xf8\x5c\xf3\x5a\x1c\xa6\xae\xdd\x71\x7d\x26\xe5\x73\xf4\x0d\x9f\xeb\x9f\x5f\xf0\xb2\x1e\xa3\xf4\x9f\x84\x69\x36\x73\xfc\x88\x3b\x69\x72\x18\x6f\x5a\xe3\xfe\x68\x30\xd9\x0c\x14\x5a\x0a\x8a\xcc\x3c\xd6\x50\x7c\x74\xdf\x0e\x48\x3c\xe6\xb9\x41\x63\xa7\x57\x14\x3c\x84\x1a\x1f\x41\xdb\x68\x3a\x20\x49\x42\x8c\x53\x1f\x6c\x98\x2e\x30\x56\xe5\xfd\x7b\xc8\x0d\xd3\x46\x2a\x60\x05\x0c\x45\x25\x90\x49\x38\xe3\x6a\x45\x7b\xc2\x2c\xc0\xdc\x3e\x7e\x78\x11\x06\x18\xb1\xc7\x8c\xfe\x45\x5b\xe2\x39\xea\x85\xc1\x55\x39\x55\xbc\x3c\xde\x42\x47\xb3\x44\xf9\x52\xc9\x69\xed\x58\x12\x5a\x52\x3b\x84\xbc\x7a\x61\xf0\x33\x99\xf2\xb8\x35\xed\x86\x7a\x61\x70\x93\xcb\xda\x8b\xb3\x09\xe0\x56\x20\x5d\xf3\x1c\x2c\x65\xd1\x0b\x83\x1f\x45\x55\x78\x05\x5c\x70\xa7\xb7\x8f\x35\x5c\x0e\xe3\x16\xb6\x52\x2f\x32\x92\x2f\x97\x8b\x65\x62\x59\xc5\x09\x6e\x3a\x96\xca\x58\xc6\xc7\xec\xed\x3b\x6d\x94\xa8\x46\x8b\xb0\xe3\xc2\x46\x51\x4b\x5b\x21\x2d\x3b\xc2\xb0\x45\x2a\x65\x73\xee\x76\x42\xa4\x0b\xd0\x66\x2b\x6b\xae\x7c\xda\x4a\x01\xcb\x5e\xb8\xb4\x1e\xee\xcb\xca\x28\x59\x96\xa0\x98\x82\x5a\x81\x46\x14\x32\xce\xf2\xd5\xb8\x73\xfa\x50\xaa\xae\xff\x73\xeb\x5f\xa6\x9c\x18\x3a\x44\xbc\xb6\x19\x6a\xa3\xa6\xb9\x61\x8b\x30\xa0\x8c\xe6\x2c\xf7\x9c\xde\xd2\xbe\xfd\x63\x27\x0d\x7c\x30\x6e\xd2\x61\x87\xc6\x5a\x51\xa5\xc1\xb0\xe6\x25\xbd\xa1\xa0\xf0\x31\xe1\x4d\x7f\x5e\x19\x50\x43\x9e\x43\xc8\x98\x91\xb5\xc8\x4f\xaf\x2f\x2c\x5b\xb2\xb4\xd3\xf9\x02\xe6\x2d\x29\x73\x05\xdc\x40\x5b\x61\xd4\x74\xce\x4d\x6e\xcb\xda\x4e\x95\xdd\xe2\x22\x1c\x4e\xab\xbc\xcb\x37\x76\x3a\x77\xb5\xed\x31\xaf\x6d\x57\xd1\x1e\xfb\x83\x8a\x26\xec\x79\x4b\x97\x45\x18\x28\x30\x53\x55\xb1\x67\xab\xd1\x45\x18\x38\x07\x78\xec\xd2\x5b\x8f\xc6\x71\xfb\xe3\x66\xdc\x0a\x13\x06\x1d\xbb\x1f\x77\x84\xeb\x85\xc1\xd2\x19\xf2\xc6\x70\x65\xde\xa0\xa5\xc8\x5e\xa0\xad\xed\x44\xa5\x0d\xaf\xd0\x3c\x72\xc8\x2e\xc9\x7e\x37\x9b\xed\xc7\xab\x82\xf1\xdc\x68\x26\x6d\x33\x30\x21\x43\xc6\x79\x5b\xab\xa4\xb5\x4f\x5c\xf9\xa0\x74\x2e\xed\xa1\x67\xea\xfe\xd8\xb6\x23\x0e\x71\x8b\x65\xc2\x40\x29\xe9\xec\x41\x7b\xfd\xc0\xab\xa2\x04\xa5\xd9\xf1\x09\xb3\x15\xa6\x89\x9f\xc1\x0c\x2a\xe3\xa6\xbf\x9f\x56\xb9\x46\x83\x9d\x16\x05\x3e\x5b\xc3\xe4\xa9\xac\x4e\x0b\x4c\x00\xc1\xeb\xba\xe0\x06\x68\x06\x87\xe9\x1d\x67\xce\xa0\x84\xf6\x0c\xbd\x5b\x63\x6d\xae\xe3\x81\xad\xcc\xb9\x51\x25\x8a\x64\x5f\xd2\x0b\x98\xc7\x79\x9a\x7b\xa8\xa4\xde\x21\x2c\x4f\x3b\x2e\x60\x2f\x92\x30\xc8\x53\x0f\xf1\x1e\xbb\xa3\xff\xcc\x31\x42\xae\xe9\x35\x8c\x84\x36\xa0\xe2\xed\xb9\x96\x3d\xdb\x99\xb7\xc2\x60\x24\x5b\x0c\x5b\x6e\x20\x71\x5b\x46\x8b\xad\x5a\x64\x0e\x95\x78\xaf\x24\xed\xf4\x63\x7d\x61\xfa\x54\x23\xd1\x0b\x1d\x9d\xd2\xeb\xc1\xcd\x2d\x4d\xc6\x49\x18\x10\x9e\x14\xd2\x51\xa0\x5c\xc0\xfc\x0d\x8d\xc5\x5e\x8d\x1e\x6b\xd0\xd0\x63\xeb\x7e\xb6\x23\x6e\x37\x52\xc4\xb1\x4c\x49\x83\x9d\x9a\xaf\xe4\x6f\x02\xaa\x12\x25\xa2\x7e\xa3\x2b\xb3\x8c\xb5\xd5\x67\x73\x51\x96\xcc\x70\xd7\x28\x4f\x40\x6b\x3e\xc2\xd8\x50\x72\x62\x47\xac\xf5\x2c\xf6\x6b\x25\x73\xd0\xba\x85\xfd\x36\xa3\x6d\x39\x64\xa2\x47\xec\x39\xb9\xe0\x27\x62\xfe\x9d\x2c\x1e\x5b\xa0\x2f\xe5\x68\x44\xc6\x73\x2b\x5f\xd9\x81\x30\xc0\x42\x8d\x46\x6b\x99\xce\xe7\xc6\x40\x0c\x91\x71\x6a\xf7\xe6\xf7\x25\x20\xa3\x00\xc9\xd8\x89\x9d\xf0\x66\x47\xf0\xb8\x19\x62\x40\xd3\x4d\xb9\x0c\x83\x25\x83\x52\xd3\x7a\xf2\xef\x0d\x62\xf6\x0e\xe5\x59\x65\xb6\x0b\x98\x7f\x2f\x15\xa9\xe4\x14\x25\x0c\xd8\xc7\x24\x0c\x9a\xd0\xd5\x3d\xd4\xcc\x6a\xe3\xb9\x35\x1e\xa3\x6e\x80\xf0\x1c\x47\x51\x92\xbe\x12\xda\xc4\xd4\xeb\xdb\xe7\xcb\xda\xb6\x39\x16\xcd\xa8\x22\x72\xfa\xe2\x04\xdd\x69\xe5\x73\xa6\x4a\xdf\x08\x33\x1e\xa0\xf9\x62\x50\x2a\x49\xe9\x31\x22\x83\x8e\xc0\x18\x2c\x05\xdb\x5b\x11\xe4\xed\x81\x02\x4a\x85\x01\x46\x7d\x80\xb9\xf0\x6e\x85\x4c\x54\x80\xea\x77\xa3\x58\x7a\x6e\x60\xa2\x49\x10\x31\x6c\xc6\x31\xd2\xcc\x54\xe3\x9f\xfc\xe1\xfc\x8c\x9d\x90\x85\xaf\xb8\xd2\x50\x38\x8f\xbf\x8d\x68\xb6\x88\xde\xd1\x7a\xef\x2a\xd5\x0e\xf2\x66\xc2\x7b\xaa\x33\xeb\xdc\x45\xd2\x62\x57\x10\x5a\x14\x58\x46\x5f\x9c\xb0\x28\x62\xcf\x9e\xb5\x80\x42\x43\x0b\xb2\xe3\x06\x81\xbc\x5d\x48\xfa\xe8\x1d\xca\x1d\x5d\x5f\xbe\x7a\xf5\xdd\x69\xff\xc7\xbb\xfe\xe5\x4f\x57\xaf\x06\xb7\x03\xe2\x10\x38\x8f\x16\x36\x4d\x5a\x55\x62\x9f\xf7\xd6\x00\xda\xdb\xa9\x7c\xe2\x6c\xb7\xee\xd7\xae\x3b\x48\x43\x82\xe5\x01\xc2\x9f\x0d\x50\xe2\x2d\xa2\x4f\x6d\x90\x12\xfd\x1f\x93\x7d\xe3\xec\xba\x20\x7b\x10\x5d\x03\xd7\xb2\x3a\xc0\x16\x5e\x8b\x13\x26\xaa\x5c\xc1\x04\x2a\x73\x2d\xcb\xf2\x9e\xe7\x0f\x7d\x39\xad\xcc\x36\x75\x0e\x37\xf6\x5f\xc4\x60\x4d\x78\x74\xaa\x41\xab\xb6\x6d\xec\x5b\x6c\xdb\x10\xcb\xfb\xf7\x4c\xf8\x7e\x0d\x7b\x93\x45\x18\xd8\x36\x44\xde\xbf\x4f\xe3\xe7\xdb\xeb\x50\x92\x9e\x01\xd4\x7d\x59\x3f\xc6\x58\x88\x5c\xe9\xa9\xa4\xd9\x7c\xd8\x3b\x2d\x0a\x7b\xd0\x13\x43\xa6\x7d\x06\xe9\xaa\x6d\x31\x1d\xb1\xdf\x7f\xdf\x49\xb0\x01\xf4\xb6\x0b\x1a\xda\xaa\xdd\x6d\x51\x34\xb6\x26\xbe\x0d\x49\x2c\x9d\x9c\x9a\x7a\x6a\x56\x29\x7b\x68\xd2\xbe\xed\x92\x29\xc8\x89\x68\xdd\xe6\xae\xff\x4c\x3b\xe5\x6a\x63\x52\x1e\xfa\xac\x6c\x5b\xef\x8d\x69\x99\xaa\x01\xfb\xfa\x2b\xfd\x75\xd4\x63\xda\xbe\x27\xa1\x3f\xb6\xa1\xff\xec\xcb\x32\xdc\xb4\xe7\x79\x35\x94\xc3\x38\xe2\x45\x01\xc5\x4e\xd6\x6c\x2e\xcc\x98\x69\x97\xa2\x3b\x9b\xf5\x5c\x4d\x8d\x9f\x93\x31\x5c\x22\x2f\x92\x64\xd7\x96\x33\x01\x73\xc6\x0d\x1b\x1b\x53\xeb\xe3\x2c\xcb\x65\xa5\x65\x09\xd8\x25\xa5\x7c\xc2\x7f\x93\x15\xdd\xd5\x94\x72\x5a\x0c\xa5\x9a\x58\xb7\x67\x63\x39\x81\x6f\xff\x2f\xb3\x72\x64\x05\x18\x2e\xca\x6f\x49\xa8\xe2\xe4\x2b\x1d\xed\x10\x25\xf4\x39\xa0\x1b\x97\x2b\xdf\x7a\x5d\x56\xb5\x62\x2b\xb7\x1e\x8b\xfa\xd7\x83\xd3\xdb\xc1\xdd\xf9\xc5\xdd\xd5\xf5\xe5\xcb\xeb\xc1\xcd\x4d\xd4\x63\x51\xb4\xa5\xec\xee\xe3\x6a\xef\x69\x2b\x1f\x7a\x5a\x53\x84\x27\x36\x1c\xd1\x81\xd4\x5d\x96\x1a\xe8\x7c\xbc\x3d\x2c\xda\x6a\x75\x9a\xd2\xed\xa1\x4b\x3d\x58\x2c\xcb\xe2\xf2\xfe\x7d\x8f\x55\x30\xbf\xdc\x10\xc8\x52\xda\x48\xb6\x44\xfb\x07\x73\x50\xd9\x65\xc4\xf3\x90\x1c\x60\xe3\xff\xb0\xd8\x45\x5b\x53\x22\xaa\x64\x62\xad\xf6\xf1\x54\x42\xba\xfb\x6c\xe2\x6e\x37\xd3\x73\x6d\xdd\xdd\x97\x93\x1a\x8b\x76\x2c\xb7\x48\xd2\x63\x43\x5e\x6a\x48\xb0\x7b\xf8\xc2\xdf\x93\xa0\x1a\x83\x5f\xa7\xbc\xc4\x65\x5e\xc7\xdb\xc7\x1a\x96\xcb\x1e\xea\xd4\x1d\x4a\x76\x25\x1d\x29\xf7\xca\x3a\xaf\x3d\xac\xf3\x07\xa7\xfa\x27\xc9\x3b\x0d\x1a\x3f\x9e\x1c\x2a\x98\xb3\x9a\x2b\x3e\xd1\xec\xab\x6f\x66\xb6\xe1\x97\x65\x81\xcf\x91\xd5\x99\xe2\xab\x92\xa8\xd2\xa1\x09\x8a\x82\x76\x9f\x14\xe5\x24\x70\x19\xaa\xd9\xf6\xaf\x90\xa2\xa4\x57\xc6\x3d\x7c\x34\x49\xbd\xbe\x3a\xfb\xec\x49\x8a\xb1\x3d\xb2\x94\x8f\xb8\x35\x98\x23\x6e\xf7\xca\x56\x74\xdd\xf0\xd9\x7a\x0d\xda\x0e\xf5\xd9\xa7\x2d\x08\x5a\x51\x79\xd6\x6a\xf8\x93\x70\x83\xd5\x0f\x0a\x46\x7b\x7c\x38\xa0\x09\xf0\x9d\x1d\x35\x73\x5b\x50\x4e\x67\x92\xdd\xa1\xd5\xe6\xb9\x87\x7b\xbd\xbd\x76\xd5\xa1\x70\xd7\xf7\x2b\xeb\xf6\x9d\xcd\xfa\x93\x5b\x02\x7b\x8c\xf3\xb7\x64\xeb\xc7\xfd\x7d\x2e\x0b\xfe\xc4\xd9\x5d\x35\x57\x34\xfb\x9d\xdc\x57\x27\x8c\xf4\x25\x98\x98\x0e\x05\xee\x14\xff\x12\x3a\x87\xf8\xa7\x88\xf9\x64\x47\xf8\x76\xd7\xef\xee\xab\x2c\x15\x86\x85\x3d\xbd\xfb\x55\xed\x52\xde\x26\x72\xcc\xdb\xde\x69\x9d\xb9\xb7\x50\x7c\xf3\x22\x0c\x83\x3b\xb2\xd4\x21\x86\x72\x0d\x4a\x9b\xfb\x1f\x35\x4f\x93\xbc\x3c\xb3\x0d\xe6\x58\xbb\x08\xb3\x80\xdc\x70\xa2\x3b\x0c\x86\xbd\xa6\x81\x6e\xbd\x63\x33\xe3\x5f\x95\x3d\xa9\xfd\x0d\xda\xff\x2a\x68\x37\xb7\x93\xce\x15\xfb\x10\xd3\x79\xda\x42\x1d\x1f\x36\x2f\x69\x6e\xb3\xbc\xcf\xa9\x9f\xdd\xd6\x5d\xea\x6e\x2f\x69\x4b\x43\xab\xd6\x38\x74\xb5\x37\xf2\x95\x9c\xca\xbe\xee\x34\x83\xe8\x0f\x1a\x8e\xff\xfc\x45\xa0\xdb\xc0\xd5\xf8\x30\x68\x7d\x9a\xfb\xb2\x56\xb2\xc6\x4d\xc9\x65\x97\xae\x03\xc9\xc7\x30\xe1\xe9\x95\x92\x35\x28\x23\xfc\x87\x3a\x97\xf0\xed\x9a\xf4\x16\x26\x75\xc9\x8d\xff\xbd\x42\xb0\x58\xd0\xf8\x8f\xf0\x88\x2d\xb2\x05\xb3\xb7\xd5\x8a\x36\x8e\x3c\x9d\x1b\xa3\x7b\x7d\x4f\x78\xc6\x0d\x5f\x5c\xde\xbf\x3f\x5e\x33\x54\xdf\x7d\x0f\x22\x33\x2e\xdb\xb7\xad\xd6\x65\x4e\x6e\xcf\xfb\xc6\x7e\x57\xb1\x92\xb0\x13\xd6\x91\xcc\xa9\xe1\xeb\xdf\x01\x6c\x9c\x15\xdf\x3e\xd1\xc0\x12\x44\xef\x3c\xe7\xaa\x58\xed\xe2\xbe\x5e\xfe\x4f\x24\xcc\x43\xd1\x4d\xea\xe8\xc7\x2a\x3f\x2d\x0a\xfb\x5d\x9d\x97\x3e\xcc\xf4\x46\xc0\x1f\x84\x64\x6c\x6e\xbc\xf8\xb8\x49\x5b\x7a\x0f\xe5\x2d\x69\xfe\xe9\x25\xed\x9f\xcb\xf2\x7f\xe7\xf1\x3d\xf2\xf8\x8e\x64\xe7\x12\x9d\xc3\xff\x3e\x4d\xf5\x3a\xf3\xd5\xd2\x37\x5c\x98\xd7\x95\x11\xa5\x5d\x4d\x8c\x0a\x2a\x11\xcd\x12\x8f\x83\xdd\xd8\x7c\x82\x09\xcd\x76\x1d\x38\x18\x5a\x8a\x80\x60\xf1\xff\x19\x1d\xde\xba\xd1\x22\x97\xfb\xab\xae\x7d\x9d\xfe\xa4\x33\x6a\x7e\xfa\xb2\xa9\xda\x62\x9f\xbf\x6a\xec\x37\x18\xd0\x7f\xe5\xc7\xb2\xa0\xfd\xe3\xf1\xc9\xea\x17\x22\xcb\xc5\xc2\xa5\xbe\x56\xa5\x69\x7f\x57\xda\x8b\x75\x73\xac\x83\x5f\x57\xab\xed\x85\x0b\x8b\x06\x1f\x0c\xa8\x8a\x2c\x14\x11\xe9\x97\x6a\xed\xdc\xd3\x2a\x40\x74\xa3\xdb\x5e\xe4\xf6\x89\x5b\x47\xc0\x8d\x17\x88\x51\x9b\x71\x9b\x81\xad\x5b\x8b\x45\x2c\xaa\x02\x3e\xb4\xe4\xbb\x92\xca\x68\xf6\xff\x89\x7d\x58\xa2\x3f\x1a\x13\x9d\x30\x5e\xd7\x50\x15\xb1\x1f\x41\x06\xeb\x62\x77\x8e\x59\xdd\xc7\x7d\x7d\xd2\x70\xdc\x49\x77\xc2\xbc\x18\xde\x5b\x1f\x77\x3c\x41\xf8\x27\x5e\xe3\x36\x64\xba\x09\xbe\x7c\x22\xe7\x77\xd8\x6f\xf2\x29\xf6\x07\xc8\x62\xc2\xeb\xb7\xb4\x5d\xf3\xa3\xa4\x4e\x57\x23\x0c\x4c\x90\x6e\xb5\xde\xae\xf4\x3f\x37\xb2\xf3\xd4\x0f\x44\xc7\xac\x19\xf8\x99\x97\x53\xf7\x2b\xa4\x6e\xf9\xde\x0b\x5d\x8d\xf0\x1f\xc5\xd4\x66\xbd\x12\xff\xbb\x23\x6b\xd1\x06\x2b\xab\xb1\x7d\xd0\xb2\xbf\xf7\x76\x82\xa4\x45\xe9\x2b\x1d\x4a\xd0\x00\x65\xff\x7e\xa6\x93\xbb\xd6\x3a\x9a\x3d\x72\x95\xbf\x60\x7c\xf2\x05\xeb\x3f\x01\x00\x00\xff\xff\x0c\x47\x71\xfc\x4a\x2c\x00\x00")

func controllerGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGoTempl,
		"controller.go.templ",
	)
}

func controllerGoTempl() (*asset, error) {
	bytes, err := controllerGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller.go.templ", size: 11338, mode: os.FileMode(420), modTime: time.Unix(1538385198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x8e\xdb\x36\x10\x3d\x8b\x5f\x31\x15\x02\xd4\x2a\xbc\x22\xf6\x56\x04\x4d\x0f\x6d\x36\x89\x91\x60\xb7\xc8\x1a\xc8\xb1\xa1\xa5\xb1\x34\x30\x45\x12\xe4\xc8\x8e\x21\xe8\xdf\x0b\x92\xb2\x03\x6c\x91\xee\x56\x17\x4a\x23\xce\x7b\xf3\x1e\x67\x28\x25\xfc\x9e\x1f\x78\xfb\x00\xf7\x0f\x5b\xb8\x7b\xbb\xd9\xc2\xf6\xc3\xe6\x11\xde\x6d\x3e\xdd\xc1\x6f\xd7\x47\x48\x09\xdb\x9e\x02\xec\x49\x23\x50\x00\x35\xb2\xed\xd0\xa0\x57\x8c\x2d\x1c\x49\xc1\x57\x75\x0a\x37\xd6\xc5\x88\xf5\x37\x8d\x6d\xb1\x43\x03\xce\xdb\x06\x43\xf8\x1a\x01\x36\x7b\x38\xdb\xf1\xe7\x16\x34\x1d\x10\xb8\x47\x68\x7a\x65\x3a\x04\x65\xce\xdc\x93\xe9\x40\xed\xec\xc8\xc0\x57\xa2\x41\x1d\x10\xb0\x25\x0e\xc0\x36\x65\xd4\x8c\x83\xd3\x11\x2d\x57\x62\x52\xd4\x1d\x3a\xb9\x30\x4a\x15\x02\x72\x80\x96\x3c\x36\x6c\xfd\xb9\x16\xc2\xa9\xe6\xa0\x3a\x84\x1e\xb5\x43\x1f\x84\xa0\xc1\x59\xcf\xb0\x12\x85\x3a\x85\x46\x13\x1a\x86\xb2\x23\xee\xc7\x5d\xdd\xd8\x41\xaa\x53\xd0\x6a\x17\xe2\x7a\x13\xd0\x1f\xa9\xc1\xab\x34\x99\xc8\x52\xce\xb2\x04\x64\x79\x44\x1f\xc8\x1a\x6c\x25\x9f\x1d\xb6\xf2\x69\x56\xad\x4e\x41\x1e\x6f\x95\x76\xbd\xba\x2d\x45\xf1\xff\xd8\xac\xd9\x53\x57\x8a\x62\x40\x56\xc7\x5b\x28\x0f\xbf\x86\x9a\xac\x54\x8e\x06\xd5\xf4\x64\xd0\x9f\xd3\x46\xe5\x28\xc8\xb8\x49\x1e\x6f\x4b\x51\x89\xe8\xd3\x3d\x9e\xe0\x0b\x69\x0d\x1e\x79\xf4\xe6\x62\x42\x34\x74\x87\xe0\xa2\x5d\x2d\x90\x59\xfc\x4d\xf6\x2a\xc6\x20\xf6\xa3\x69\x62\xf2\xaa\x82\x0f\x4b\xca\x24\x8a\x05\x64\x89\x4c\xa2\x00\xf8\x38\xee\xd0\x1b\x64\x0c\x9f\x31\xd8\xd1\x37\x78\xaf\x06\x7c\xfd\x83\xf8\x5a\x14\xc5\x34\xdd\x80\x4f\x27\xff\x8a\x4c\x8b\xdf\xd6\xf0\x0a\x35\x0e\xf1\x14\x5e\xbf\x81\x7a\xc3\x38\x04\x98\x67\x51\x14\xef\x91\xa7\xe9\xf2\xb3\x7e\x74\xd8\xd4\x1f\xc9\xb4\xf3\xfc\xc7\x39\x93\x3c\xb3\xe1\xc2\x86\x31\x24\x8a\x59\xcc\xc9\x93\x8b\xa0\x16\xf7\x64\x30\x80\xd2\x3a\xa9\xcf\x71\x88\xd2\x99\xac\x09\xc0\xbd\x62\x50\x1e\x01\xbf\x39\x1b\x8d\xfa\x97\x4d\xf1\xb8\xaf\x78\x81\xfd\xd8\x30\x4c\xe2\x47\xae\x24\xe8\x55\x60\x4f\xa6\xab\xe0\xf2\x22\x5e\xee\xc8\x33\x7a\x33\xfe\x2f\xb9\x61\xea\x3f\xd3\xb2\x86\x4c\x73\x59\x2b\x58\x91\x61\xf4\x7b\xd5\xe0\x34\xaf\x01\xbd\xb7\x7e\xa9\x21\xfb\x34\x0b\xf1\xd2\x82\xa4\x7c\xee\x08\xe0\x14\x9b\x6f\x4f\xa6\x4d\xce\xf9\xc5\x0d\xd8\x9d\xc1\xa8\x01\x73\x9f\x3d\x83\xb1\xca\x82\xe0\xa9\xb0\x08\x70\x55\x17\x3f\x82\x53\x0d\xfe\xa7\xce\xd8\xc4\xda\x76\x1d\xfa\x28\x64\xc1\xfb\x94\x02\xa2\xc8\xf3\xfc\x88\xbc\x86\xbf\xe3\xef\xeb\xed\x50\xdf\xe3\xe9\x9d\xf5\x99\x77\xa9\xa6\xfe\x7c\xf7\xb8\xcd\x91\x2a\x0e\x46\xd6\x95\x78\x12\xf4\x05\xab\x7e\xaa\xec\x2f\x3d\x7a\xa5\xa3\xae\x79\x5e\x5d\xab\xae\xea\xf7\xc8\xe9\x73\x0d\x79\xce\x63\xe0\xc1\xa5\x46\x9c\xe6\x4a\x14\xb4\x4f\xd8\x3f\xbd\x01\x43\x3a\xea\x58\x84\xd4\x5f\x88\xfb\xbb\xa8\x6e\x85\xde\x57\x75\x7e\x2d\x93\x5e\xe8\x90\x39\x5e\xad\x21\x76\xb3\x75\xd4\x94\x95\x28\x2e\x63\x5c\x96\xa9\xdc\x38\x18\xd7\xd1\xfe\x2e\xc4\x90\x16\xb3\xf8\xde\x16\xff\x04\x00\x00\xff\xff\xe5\x13\x3f\x32\x30\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1584, mode: os.FileMode(420), modTime: time.Unix(1538385198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(420), modTime: time.Unix(1538384745, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cft.go.templ": cftGoTempl,
	"controller.go.templ": controllerGoTempl,
	"template_functions.go.templ": template_functionsGoTempl,
	"types.go.templ": typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cft.go.templ": &bintree{cftGoTempl, map[string]*bintree{}},
	"controller.go.templ": &bintree{controllerGoTempl, map[string]*bintree{}},
	"template_functions.go.templ": &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ": &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

