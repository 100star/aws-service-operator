// Code generated by go-bindata.
// sources:
// assets/cft.go.templ
// assets/controller.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\xda\xc8\x13\x7f\x6d\x7f\x8a\xf9\xa3\xaa\x7f\x3b\x22\xe6\xfa\x16\x5d\x4e\xea\x35\x7d\x88\x5a\x25\x55\xa0\xed\x8b\x28\x6a\x17\x7b\x30\xdb\x18\xaf\xcf\xbb\x0e\xc7\x21\x7f\xf7\xd3\x3e\x18\xaf\x0d\x86\xd0\xf6\xda\xeb\x09\xd4\x0a\x58\xcf\xfc\x66\xe6\x37\xb3\xb3\x3b\x61\x30\x80\xdf\xf4\x0b\xce\xaf\xe0\xf2\x6a\x0c\xcf\xcf\x2f\xc6\x30\x7e\x75\x31\x82\x17\x17\x6f\x9e\xc3\xaf\xeb\x97\x3b\x18\xc0\x78\x46\x39\x4c\x69\x82\x40\x39\x90\x42\xb0\x18\x53\xcc\x89\xc0\x08\xee\x29\x81\x4f\x64\xc1\x4f\x59\x26\x57\x58\x7e\x1a\xb2\x08\x63\x4c\x21\xcb\x59\x88\x9c\x7f\x92\x00\x17\x53\x58\xb2\xe2\xff\x11\x24\xf4\x0e\x41\xcc\x10\xc2\x19\x49\x63\x04\x92\x2e\xc5\x8c\xa6\x31\x90\x09\x2b\x04\x88\xb5\xa1\x39\xb9\x43\xc0\x88\x0a\x0e\x82\x29\x8d\x40\xe0\x3c\x4b\x24\x9a\xf6\x24\x55\xab\xd9\x5d\x3c\x30\x16\x07\x84\x73\x14\x1c\x22\x9a\x63\x28\x58\xbe\x0c\x5c\x37\x23\xe1\x1d\x89\x11\x56\xab\x60\x94\x61\x18\x5c\x23\x67\x45\x1e\x62\x70\x49\xe6\x58\x96\xae\x4b\xe7\x19\xcb\x05\x78\xae\xd3\xc3\x3c\x67\x39\xef\xb9\x4e\x2f\xa6\x62\x56\x4c\x82\x90\xcd\x07\x64\xc1\xe5\xff\x53\x1e\xdd\x9d\xc6\x4c\x7e\xdc\x2d\xc0\x31\xbf\xa7\x21\x0e\xc2\x84\x15\xd1\x94\xe5\x73\x22\x28\x4b\x7b\xae\x43\x16\xfc\xfd\x13\x92\x64\x33\xf2\x04\x6c\xfd\x70\x96\x53\x2e\x58\x36\xc3\x7c\x86\x34\x1d\xd8\x5c\x0e\x64\x74\x24\xa3\x7c\x50\xad\x04\xd2\xdc\xbd\xc1\x69\x79\xb2\x17\x29\x64\xe9\x94\xc6\x87\x6a\xcd\x30\xc9\x50\xf2\xe2\xbb\x92\xfc\x4b\x5c\x40\x95\x7e\x0e\x04\x52\x5c\x00\x9b\x7c\xc6\x50\xb8\xd3\x22\x0d\xe5\x73\x4f\x1b\x82\x13\xfd\x1e\x3c\x53\x6f\xfd\xae\x24\xc0\x89\xc5\x4d\x50\x09\xbd\xa6\x69\x54\x96\x7d\x10\x2c\xa3\xe1\xd3\xeb\x4b\xe0\x22\xa7\x69\xec\xc3\xc9\xb3\x06\xb5\xb0\x72\x9d\x1c\x45\x91\xa7\xf0\xb8\xf9\x64\xe5\x3a\x4e\x13\x6d\xd8\xe5\x42\xdf\x75\x1c\xed\xec\xd0\x91\x2f\xfd\xb9\xef\x02\xc0\xda\x81\x21\xe8\x57\xf5\xbd\xef\x3a\xa5\x5b\x2a\x4e\x5a\x1e\x45\x38\xa5\x29\x72\x55\x9f\x5d\x31\x87\x53\xc1\x5d\xb1\xcc\xb0\xad\xcc\x45\x5e\x84\x42\x46\x65\x58\xac\x5e\x4d\x36\xdd\x56\x68\xbb\x48\x74\x6b\xa7\x0d\x96\xe6\xd2\x78\x3f\x12\x24\xbc\x93\x6e\x81\xe6\x51\x3b\x9e\xca\x05\x36\x55\x9f\xb9\x94\x80\x09\xe1\x18\x01\xd3\xfb\xae\xb5\xe5\x95\x4b\x2a\xff\x1e\x6f\x67\xc8\xaf\x2d\x78\xbe\x31\x6d\x65\xcd\xd4\x57\x50\x0b\xf1\xa0\x0a\x35\x29\xb8\xc0\x5c\x2e\xf6\xa1\xd7\x41\x65\xaf\x0f\xbc\x15\x70\xa0\x35\xb6\x2e\xf3\x8c\x84\xe8\x9b\xd0\x5f\xa2\xb8\x2a\x44\x56\x08\x6e\x62\xb7\xc2\x65\xe6\xc1\x34\x67\x73\xb5\x7c\x8e\x3c\xcc\xe9\x04\x95\xa3\x1c\x42\x92\x24\xdd\x21\xd7\xc8\x9e\x0f\xde\x9c\x64\x37\x3a\xf0\x5b\xfd\xd6\x07\xd5\x6d\x7c\xc9\x43\x65\x68\x78\x06\x1b\x72\xab\xd2\x75\x38\x72\xf5\x70\x4d\xcb\xd3\x0f\xa3\x11\x72\x4e\x59\xea\x3a\xfc\x3e\x94\xcf\x9a\xed\x26\x90\x9b\x50\xaa\xf9\xae\xeb\xa8\x68\x2e\xd2\xca\x44\x4b\xb2\x19\x94\x12\x93\xfb\x66\x9d\x0c\x59\xf5\x64\x21\xb3\x23\xdd\xf1\xec\x34\xf9\xbe\xda\x02\x55\x00\x2a\x24\xe5\xe7\x7d\xd8\x82\xf5\x1e\x5b\x4e\xf8\xae\x43\xa7\x4a\xf6\x7f\x67\x90\xd2\x44\x52\x50\xd5\x42\x4a\x13\x05\x23\x71\x1d\xd9\x6c\x98\x00\x5e\xe4\x08\x74\xaa\xcf\x06\xca\x01\xef\xe5\xe1\xc2\x38\xa7\x93\x04\x15\x56\x82\xa9\xa7\x7d\xd0\xde\x71\x5f\x42\x3f\xd9\x06\xcc\x72\xae\xc8\xe9\xa5\x4c\xa7\xb9\x4a\x3c\x46\xb0\xa0\x62\x06\x62\x46\x84\x29\x00\xb9\x03\x7a\xbe\x0e\x71\xca\x72\xf8\xd8\x97\x35\x21\x23\xcc\xd5\xd9\xd5\x30\x79\xf3\xcb\x6d\x50\x95\x92\xb4\x6b\x92\x7a\x73\xc2\x0a\x61\x1e\xbc\xc6\xe5\x2d\x9c\x81\xb5\xf2\x9e\x24\x05\x6a\x03\xc6\x4f\xa3\xa6\x49\x30\xcd\x25\x47\x22\x34\x91\xb0\xa0\x49\x02\xa1\x5a\xb0\x2a\xd5\x38\x8e\xc0\x8b\x2c\x4b\x28\x46\x90\x91\x9c\xcc\x79\x77\x75\x5a\x98\xb2\x3c\xb5\x55\x38\x69\xd5\x86\x25\x75\x65\xa5\xb8\xae\xdc\xaf\xac\xcc\x70\xaa\x8e\x74\x19\xcc\xf0\x6c\xdd\x07\x5e\xa2\x50\xee\xbe\xa8\x74\xc6\x46\x68\xdd\x17\x0e\xeb\x05\xd5\xd7\xf1\x32\xc3\xb2\x0c\xb6\x63\x77\x34\x8c\x07\xeb\x9a\xae\xb2\x6f\xb7\x59\x8c\x1e\xbe\xd5\x9c\xca\xe0\xbb\xeb\x37\x43\x5b\xb2\xe6\x51\x89\x5d\x32\x41\xa7\x34\x54\x16\x9f\x5e\x5f\xf2\x21\xdc\xdc\x9e\x98\x76\xe2\x3a\x8e\xd3\xb0\x51\x1d\x0c\x4a\xb3\xec\x57\xc5\xa8\x59\x55\x87\x82\x95\x1a\xed\xfe\x5b\x59\x5c\x5e\xef\xda\x12\xea\xea\xc1\x7e\x8d\xf5\x1e\x73\x59\x17\x7b\xe1\x8c\xdc\x36\xc4\x96\x88\xef\x3a\x69\x45\x7d\x27\xec\x3a\x39\x5d\x2e\x9a\xcc\x39\x61\x7d\xd6\x74\x82\x59\xe7\x91\x82\xdb\x3c\xa6\x7c\x77\xb5\x3a\x35\xfd\xe1\x91\x60\x99\x84\xd2\x26\x7f\x67\xd1\x32\x18\x85\x33\x9c\x93\xe0\x6d\x2e\x8f\x4e\x41\x91\x97\xa5\x3c\xc8\x4f\x65\x7f\xdb\xb2\x6a\x70\x52\xe4\xf2\xaa\x2d\xa1\x1a\x32\xb5\xaa\xa9\x0c\xfa\x17\x46\x5a\x57\xda\x0e\x5e\xe3\xb2\x2c\x57\x2b\xa3\xaf\xbf\x4a\x49\x89\xd4\xab\xd7\xab\xb2\x2a\xcb\x9e\x46\xc4\x84\xe3\xc3\x61\xe4\xbf\xb2\x0c\xae\x26\x9f\x83\xd5\xea\x51\x63\xbf\x18\x80\x91\xba\xd2\x28\x3d\x95\x81\xfa\xab\x52\xed\xd5\x86\xd3\x7d\xee\xab\x8e\xb9\x3e\x69\xaa\x24\xd5\xe1\x7b\x7b\x7c\xee\xaf\x75\xce\x89\x20\xab\xab\xc9\xe7\xa1\x2a\x8b\x47\xcd\x4b\xa7\xbe\x63\x0d\xa1\xee\x38\xaf\xb4\xda\x70\xad\x2f\x1b\x99\x5f\xee\x3a\xcc\xac\x63\x51\x6e\x2b\x80\x1d\xbe\x75\x96\xdc\x66\x9a\x94\x7c\xaf\x6f\xdd\x9b\xe4\x56\xa6\xd3\xe5\xae\xd8\x15\x6f\xbe\xdf\xa2\xd9\x4e\xb5\x2a\x24\x0f\xff\x50\x65\xab\x12\x08\x3d\xbb\x0f\xf4\xfc\x76\x6a\x76\xf9\xac\x30\xf6\x3a\xbc\xc1\xbc\x6e\x1a\x7e\xc3\xb7\x07\x55\xb9\xa9\x47\xa7\x6d\x7b\x67\x4d\x5b\x4a\x07\x15\xf1\xfe\xaa\x3d\xa8\x4c\x7f\x70\x5d\x7e\xe3\x9c\x6e\xd0\xb0\xad\xea\xd4\xc7\xfa\x93\xeb\xa8\x0b\x0b\x0a\xcc\xd5\xa9\x79\x73\xdb\xbe\x8a\xbc\xad\x9e\xcb\x0b\xb1\x25\x7c\x06\x24\xcb\x30\x8d\xbc\x7a\xad\x0f\x76\xd9\xfa\x0f\x17\xaf\x8f\x95\x7d\x1a\xa9\x75\x6e\xec\x93\x0d\x7f\xd0\xe1\xb0\xd7\xb1\x1d\xdd\xa2\xbb\x4f\x1c\x02\xea\x77\x25\xdb\xba\x23\x05\x23\x14\xeb\xdc\x72\x0b\xca\x6f\x5d\x43\xc6\x24\xde\xac\xcd\x31\x89\xbf\xf4\x1e\xb2\x1f\xef\xcb\x2e\x22\xdd\xb8\x5f\x72\x13\xe9\x46\x7b\xc8\x55\xc4\x75\x04\x89\x3b\x36\xd4\x98\xa8\xd9\x52\x09\xac\x33\x29\xbf\x35\xb7\xcf\x98\xc4\xfe\x6e\xa9\x9a\xcf\x0e\x41\x9b\x9a\x0e\x91\x66\xc4\xfe\x66\x89\x8c\x49\xcc\x95\xac\xef\xba\x60\x37\x30\xd0\xe3\xa6\x3d\xcf\xb4\x66\x4d\xdd\xf4\xcc\x2c\xf5\x2e\x8b\x9a\xb3\x54\xa1\x16\xd4\xf0\x84\x7f\x52\x2e\x68\x1a\xeb\xa1\xaa\x7b\x76\xb2\x30\x3c\xad\x1e\xed\xfa\xe3\x4b\xf7\x78\x65\x01\xfd\x3c\xe3\x95\x89\xf8\x90\xa9\xea\x60\x95\x07\x0e\x53\x16\x7f\xc7\x61\xea\x38\x4c\x1d\x87\xa9\x7f\xc3\x30\x65\x36\xfb\x77\xb8\xaa\x1e\x27\xa8\x7f\x62\x82\x82\xff\xd2\x04\xf5\xfd\x8a\xf1\x38\x37\x1d\xe7\xa6\xe3\xdc\x74\x9c\x9b\x7e\xb2\xb9\xc9\x9e\x65\x76\xcd\x4d\xe7\x98\x60\x63\x6e\x8a\xd4\x42\xfd\x1b\x54\xf7\xb8\x64\xa9\x7a\x3e\x78\xdf\x74\xc2\xd9\xf7\xd3\xe6\xda\xb2\x9e\x0f\xca\x0d\x7e\xec\xdf\x9c\xed\x01\x41\xb2\xf5\xd1\x26\xca\x8e\x62\x17\x51\x1f\x08\x15\xef\x52\x41\x13\x25\xaa\xb5\xa2\x43\x29\xdb\x0a\xf2\xdd\xc9\xfb\xea\xdf\x85\xc1\xe2\x6f\x5b\x48\xcf\xd8\x3c\x93\xef\x9d\x84\xfe\x1d\x00\x00\xff\xff\xe5\xc6\x19\xcc\xa6\x24\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9382, mode: os.FileMode(420), modTime: time.Unix(1536301391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6f\x73\xdb\x36\xd2\x7f\x4d\x7e\x0a\x94\x4f\x9b\x92\xa9\x42\x3e\x79\x77\xe3\x39\x5f\xc7\x95\xd5\xd4\x53\xd7\xf2\xd9\x4e\xf3\x22\x93\x71\x61\x72\x25\x31\xa6\x08\x16\x80\xac\xb8\xaa\xbe\xfb\xcd\x62\x01\x0a\x94\x25\x45\x6a\x7a\x99\xb9\x4e\x33\x99\x31\x09\x2c\x16\xbb\xbf\xfd\x0b\x50\x59\xc6\xfe\x45\xff\xd8\xe9\x90\x5d\x0c\x6f\xd8\xe0\xf4\xec\x86\xdd\xfc\x70\x76\xcd\xbe\x3f\x3b\x1f\xb0\x7f\xb6\xff\xc2\x2c\x63\x37\x93\x52\xb1\x51\x59\x01\x2b\x15\xe3\x33\x2d\xc6\x50\x83\xe4\x1a\x0a\xf6\x50\x72\xf6\x0b\x9f\xab\x17\xa2\xc1\x11\x21\x99\x9b\xfb\x05\x57\x9e\x8d\xd8\xa3\x98\x7d\x5d\xb0\xaa\xbc\x07\xa6\x27\xc0\xf2\x09\xaf\xc7\xc0\x78\xfd\xa8\x27\x65\x3d\x66\xfc\x4e\xcc\x34\xd3\xed\x0e\x53\x7e\x0f\x0c\x8a\x52\x2b\xa6\x85\x59\x91\x6a\x98\x36\x15\x72\x23\x11\x6a\x33\xda\xdc\x8f\xb3\x5c\x14\x30\x86\x3a\xe3\x4a\x81\x56\xac\x28\x25\xe4\x5a\xc8\xc7\x34\x0c\x1b\x9e\xdf\xf3\x31\xb0\xc5\x22\xbd\x6e\x20\x4f\xaf\x40\x89\x99\xcc\x21\xbd\xe0\x53\x58\x2e\xc3\xb0\x9c\x36\x42\x6a\x16\x87\xc1\x62\xf1\x82\x95\x23\x46\x74\x67\xaa\x3f\x53\x5a\x4c\xcb\xdf\xa0\x58\x2e\xc3\x80\x4d\x41\xf3\x87\x97\x2c\xba\xff\x87\x4a\x4b\x91\xf1\xa6\x9c\xf2\x7c\x52\xd6\x20\x1f\x33\x94\x81\x37\xa5\xca\x90\x28\x7b\x78\x19\x85\x41\x34\x2e\xf5\x64\x76\x97\xe6\x62\x9a\xe5\x13\x59\x2a\x2d\x9a\x09\xc8\x09\x94\x75\xe6\xc3\x64\xd6\x4e\xa0\x6a\x40\xaa\x88\x64\x80\xda\xec\x18\x49\x18\x55\x90\xeb\x28\x3c\x90\x5b\x2e\xea\x51\x39\x8e\xd6\x14\xfa\xf7\x0c\x66\xa8\x30\x63\x07\x31\xfb\x15\x97\x75\x05\x13\xcd\x7d\xa9\x77\x72\x71\x1c\x5e\xdc\x97\x3a\x0a\x03\xde\x94\xf0\x41\x43\xad\x4a\x51\xab\x87\x97\x77\xa0\x79\x07\xc8\xd5\xe4\x0b\x44\x11\xe4\x03\xc8\x15\xa6\x1d\x82\xcc\x2e\x47\x84\x2d\x83\xbc\x2a\xa1\xd6\x2f\xc6\x22\xd3\x42\x54\x2a\xcb\x79\x3e\x01\x04\x8d\xcf\x15\x6f\xca\xc3\xd4\x35\x3b\xba\x91\x94\xcf\xd1\x26\x7c\xae\x7e\x7e\xc9\xab\x66\x82\x52\x7f\x12\xb3\xec\xc1\xf2\x21\xae\x24\xf9\x61\x3c\x69\x8d\xfd\xa3\x40\x67\x0f\x20\x11\x19\x28\x32\xfd\xd8\x40\xb1\x75\xbf\x8e\x33\x38\xdf\xe6\x1a\x41\x4d\x2f\x29\x48\xc8\x3b\x5c\xa4\x6c\xa3\xe9\x38\x43\x12\x62\x3c\xba\xa0\xc2\xb4\x80\x31\x29\xee\xde\x43\xae\x99\xd2\x42\x02\x2b\x60\x54\xd6\x25\x32\x09\x1f\xb8\x5c\xd1\x1e\x33\xe3\x48\x76\x1f\x37\xbc\x08\x03\x8c\xcc\x23\x46\xff\xa2\x2d\x71\x1b\xf5\xc2\xe0\xb2\x9a\x49\x5e\x1d\x6d\xa1\xa3\x59\xa2\x7c\x25\xc5\xac\xb1\x2c\xc9\x2b\x52\x33\x84\xbc\x7a\x61\xf0\x33\x41\x78\xe4\x4d\xdb\xa1\x5e\x18\x5c\xe7\xa2\x71\xe2\x6c\x72\x64\x23\x90\x6a\x78\x0e\x86\xb2\xe8\x85\xc1\x8f\x65\x5d\x38\x05\x6c\x10\xa7\x37\x8f\x0d\x0c\x47\xb1\xe7\x4b\xa9\x13\x19\xc9\x97\xcb\xc5\x32\x31\xac\xe2\x04\x37\x9d\x08\xa9\x0d\xe3\x23\xf6\xf6\x9d\xd2\xb2\xac\xc7\x8b\xb0\x63\xc2\x56\x51\x43\x5b\x23\x2d\x7b\x81\xe1\x89\x54\xd2\xe4\xd6\xed\x84\x48\x17\x20\x66\x2b\x34\x57\x36\xf5\x42\x7d\xd9\x0b\x97\xc6\xc2\x7d\x51\x6b\x29\xaa\x0a\x24\x93\xd0\x48\x50\xe8\x7d\x8c\xb3\x7c\x35\x6e\x8d\x3e\x12\xb2\x6b\xff\xdc\xd8\x97\x49\x2b\x86\x0a\xd1\x4f\x7d\x86\x4a\xcb\x59\xae\xd9\x22\x0c\x28\x73\x59\xe4\x9e\xd3\x5b\xda\x37\x7f\xcc\xa4\x86\x0f\xda\x4e\x5a\xdf\xa1\x31\x2f\x9a\x14\x68\xd6\xbe\xa4\x43\x1b\x0c\x0e\xf3\xb3\x5a\x83\x1c\xf1\x1c\x42\xc6\xb4\x68\xca\xfc\xe4\xea\xc2\xf0\x23\x88\xad\xb2\x17\x30\xf7\xc4\xcb\x25\x70\x0d\xbe\xa6\xa8\xe2\x9c\xeb\xdc\xd4\xad\x9d\xba\xda\xc5\x45\x38\x9a\xd5\x79\x97\x6f\x6c\x95\xed\xaa\xd9\x63\x4e\xcd\xae\x86\x3d\x76\xa8\x86\x09\x7b\xee\x29\xb1\x08\x03\x09\x7a\x26\x6b\xf6\x6c\x35\xba\x08\x03\x0b\xb9\xf3\x56\x7a\xeb\xd1\x38\xee\x7b\xd4\x8e\x1b\x29\xc2\xa0\x83\xf4\x51\x47\xaa\x5e\x18\x2c\x2d\x82\xd7\x9a\x4b\xfd\x06\x21\x22\xa0\x40\x19\xd0\xca\x5a\x69\x5e\x23\x2e\x62\xc4\x86\x04\xdc\xf5\x66\xe0\x78\x5d\x30\x9e\x6b\xc5\x84\x29\xf3\x53\x42\x30\xce\x7d\xad\x12\x6f\x9f\xb8\x76\x61\x68\x6d\xd9\x43\x93\x34\xfd\x89\x69\x34\xac\x8f\x2d\x96\x09\x03\x29\x85\xc5\x83\xf6\xfa\x81\xd7\x45\x05\x52\xb1\xa3\x63\x66\x6a\x47\x1b\x31\x83\x07\xa8\xb5\x9d\xfe\x7e\x56\xe7\x0a\x01\x3b\x29\x0a\x7c\x36\xc0\xe4\xa9\xa8\x4f\x0a\x0c\xf9\xe0\x75\x53\x70\x0d\x34\x83\xc3\xf4\x8e\x33\xa7\x50\x81\x3f\x43\xef\x06\xac\xcd\x15\x3a\x30\x35\x37\xd7\xb2\x42\x91\xcc\x4b\x7a\x01\xf3\x38\x4f\x73\xe7\x23\xa9\x33\x08\xcb\xd3\x8e\x09\xd8\xcb\x24\x0c\xf2\xd4\xf9\x76\x8f\xdd\xd2\x7f\x66\x19\x21\xd7\xf4\x0a\xc6\xa5\xd2\x20\xe3\xed\xd9\x95\x3d\xdb\x99\xa9\xc2\x60\x2c\x3c\x86\x9e\x19\x48\x5c\x0f\xb4\xd8\xa8\x45\x70\xc8\xc4\x59\x25\xf1\x13\x8e\xb1\x85\xee\x53\x35\x44\x2b\x74\x74\x4a\xaf\x06\xd7\x37\x34\x19\x27\x61\x40\xfe\x24\x91\x8e\x22\xe4\x02\xe6\x6f\x68\x2c\x76\x6a\xf4\x58\xeb\x0d\x3d\xb6\x6e\x67\x33\x62\x77\x23\x45\x2c\xcb\x94\x34\xd8\xa9\xf9\x4a\xfe\x36\xa0\xea\xb2\x42\xaf\xdf\x68\xca\x2c\x63\xbe\xfa\x6c\x5e\x56\x15\xd3\xdc\xb6\xc0\x53\x50\x8a\x8f\x31\x36\xa4\x98\x9a\x11\x83\x9e\xf1\xfd\x46\x8a\x1c\x94\xf2\x7c\xdf\x67\xb4\x2d\x79\x4c\xd5\x98\x3d\x27\x13\xfc\x44\xcc\xbf\x13\xc5\xa3\xe7\xf4\x95\x18\x8f\x09\x3c\xbb\xf2\xdc\x0c\x84\x01\x96\x66\x04\xcd\x83\xce\x25\xc5\xa0\x1c\x21\xe3\xd4\xec\xcd\xef\x2a\x40\x46\x01\x92\xb1\x63\x33\xe1\x60\x47\xe7\xb1\x33\xc4\x80\xa6\xdb\x02\x19\x06\x4b\x06\x95\xa2\xf5\x64\xdf\x6b\xf4\xd9\x5b\x94\x67\x95\xd2\x2e\x60\xfe\xbd\x90\xa4\x92\x55\x94\x7c\xc0\x3c\x26\x61\xd0\x86\xae\xea\xa1\x66\x46\x1b\xc7\xad\xb5\x18\xd5\x7f\xf2\xe7\x38\x8a\x92\xf4\xbc\x54\x3a\xa6\x2e\xde\x3c\x0f\x1b\xd3\xd8\x18\x6f\x46\x15\x91\xd3\x17\xc7\x68\x4e\x23\x9f\x85\x2a\x7d\x53\xea\xc9\x00\xe1\x8b\x41\xca\x24\xa5\xc7\x88\x00\x1d\x83\xd6\x58\x03\xb6\x37\x1f\xc8\xdb\x39\x0a\x48\x19\x06\x18\xf5\x01\xe6\xc2\xdb\x95\x67\xa2\x02\x54\xb1\x5b\xc5\xd2\x33\x0d\x53\x45\x82\x94\xa3\x76\x1c\x23\x4d\xcf\x14\xfe\xc9\xef\xcf\x4e\xd9\x31\x21\x7c\xc9\xa5\x82\xc2\x5a\xfc\x6d\x44\xb3\x45\xf4\x8e\xd6\x3b\x53\x49\x3f\xc8\xdb\x09\x67\xa9\xce\xac\x35\x17\x49\x8b\x7d\x40\x68\xbc\xc0\x30\xfa\xe2\x98\x45\x11\x7b\xf6\xcc\x73\x14\x1a\x5a\x10\x8e\x1b\x04\x72\xb8\x90\xf4\xd1\x3b\x94\x3b\xba\x1a\x9e\x9f\x7f\x77\xd2\xff\xf1\xb6\x3f\xfc\xe9\xf2\x7c\x70\x33\x20\x0e\x81\xb5\x68\x61\xd2\xa4\x51\x25\x76\x79\x6f\xcd\x41\x7b\x3b\x95\x4f\x2c\x76\xeb\x76\xed\x9a\x83\x34\x24\xb7\x3c\x40\xf8\xd3\x01\x4a\xbc\x45\xf4\x99\x09\x52\xa2\xff\x63\xb2\x6f\x9c\x5d\x17\x64\x0f\xa2\x2b\xe0\x4a\xd4\x07\x60\xe1\xb4\x38\x66\x65\x9d\x4b\x98\x42\xad\xaf\x44\x55\xdd\xf1\xfc\xbe\x2f\x66\xb5\xde\xa6\xce\xe1\x60\xff\x45\x00\x6b\xc3\xa3\x53\x0d\xbc\xda\xb6\xb1\x6f\x31\x6d\x43\x2c\xee\xde\xb3\xd2\xf5\x6b\xd8\x9b\x2c\xc2\xc0\xb4\x21\xe2\xee\x7d\x1a\x3f\xdf\x5e\x87\x92\xf4\x14\xa0\xe9\x8b\xe6\x31\xc6\x42\x64\x4b\x4f\x2d\xf4\xe6\xe3\xdd\x49\x51\x98\xa3\x5d\x39\x62\xca\x65\x90\xae\xda\xc6\xa7\x23\xf6\xfb\xef\x3b\x09\x36\x38\xbd\xe9\x82\x46\xa6\x6a\x77\x5b\x14\x85\xad\x89\x6b\x43\x12\x43\x27\x66\xba\x99\xe9\x55\xca\x1e\xe9\xb4\x6f\xda\x63\x0a\x72\x22\x5a\xc7\xdc\xf6\x9f\x69\xa7\x5c\x6d\x4c\xca\x23\x97\x95\x4d\xcf\xbd\x31\x2d\x53\x35\x60\x5f\x7f\xa5\xbe\x8e\x7a\x4c\x99\xf7\x24\x74\x07\x35\xb4\x9f\x79\x59\x86\x9b\xf6\x3c\xab\x47\x62\x14\x47\xbc\x28\xa0\xd8\xc9\x9a\xcd\x4b\x3d\x61\xca\xa6\xe8\xce\x66\x3d\x5b\x53\xe3\xe7\x04\x86\x4d\xe4\x45\x92\xec\xda\xf2\xa1\x84\x39\xe3\x9a\x4d\xb4\x6e\xd4\x51\x96\xe5\xa2\x56\xa2\x02\xec\x92\x52\x3e\xe5\xbf\x89\x9a\xee\x0e\x2a\x31\x2b\x46\x42\x4e\x8d\xd9\xb3\x89\x98\xc2\xb7\xff\x97\x19\x39\xb2\x02\x34\x2f\xab\x6f\x49\xa8\xe2\xf8\x2b\x15\xed\x10\x25\x74\x39\xa0\x1b\x97\x2b\xdb\x3a\x5d\x56\xb5\x62\x2b\xb7\x1e\x8b\xfa\x57\x83\x93\x9b\xc1\xed\xd9\xc5\xed\xe5\xd5\xf0\xd5\xd5\xe0\xfa\x3a\xea\xb1\x28\xda\x52\x76\xf7\x31\xb5\xb3\xb4\x91\x0f\x2d\xad\x28\xc2\x13\x13\x8e\x68\x40\xea\x2e\x2b\x05\x74\x22\xde\x1e\x16\xbe\x5a\x9d\xa6\x74\x7b\xe8\x52\x0f\x16\x8b\xaa\x18\xde\xbd\xef\xb1\x1a\xe6\xc3\x0d\x81\x2c\x84\x89\x64\x43\xb4\x7f\x30\x07\xb5\x59\x46\x3c\x0f\xc9\x01\x26\xfe\x0f\x8b\x5d\xc4\x9a\x12\x51\x2d\x12\x83\xda\xc7\x53\x09\xe9\xee\xb2\x89\xbd\xb7\x4c\xcf\x94\x31\x77\x5f\x4c\x1b\x2c\xda\xb1\xd8\x22\x49\x8f\x8d\x78\xa5\x20\xc1\xee\xe1\x0b\x77\x33\x82\x6a\x0c\x7e\x9d\xf1\x0a\x97\x39\x1d\x6f\x1e\x1b\x58\x2e\x7b\xa8\x53\x77\x28\xd9\x95\x74\x84\xd8\x2b\xeb\xbc\x76\x6e\x9d\xdf\x5b\xd5\xff\x94\xbc\xd3\x7a\xe3\xc7\x93\x43\x0d\x73\xd6\x70\xc9\xa7\x8a\x7d\xf5\xcd\x83\x69\xf8\x45\x55\xe0\x73\x64\x74\xa6\xf8\xaa\x05\xaa\x74\x68\x82\xa2\xa0\xdd\x27\x45\x59\x09\x6c\x86\x6a\xb7\xfd\x2b\xa4\x28\xe1\x94\xb1\x0f\x1f\x4d\x52\xaf\x2f\x4f\x3f\x7b\x92\x62\x6c\x8f\x2c\xe5\x22\x6e\xcd\xcd\xd1\x6f\xf7\xca\x56\x74\xdd\xf0\xd9\x7a\x0d\xda\x0e\xf5\xd9\xa7\x2d\x08\xbc\xa8\x3c\xf5\x1a\xfe\x24\xdc\x80\xfa\x41\xc1\x68\x8e\x0f\x07\x34\x01\xae\xb3\xa3\x66\x6e\x8b\x97\xd3\x99\x64\x77\x68\xf9\x3c\xf7\x30\xaf\xc3\x6b\x57\x1d\x0a\x77\x7d\x99\x32\x66\xdf\xd9\xac\x3f\xb9\x25\x30\xc7\x38\x77\x4b\xb6\x7e\xdc\xdf\xe7\xb2\xe0\x13\xce\xee\xb2\xbd\xa2\xd9\xef\xe4\xbe\x3a\x61\xa4\xaf\x40\xc7\x74\x28\xb0\xa7\xf8\x57\xd0\x39\xc4\x3f\xf5\x98\x3f\xed\x08\xef\x77\xfd\xf6\xbe\xca\x50\x61\x58\x98\xd3\xbb\x5b\xe5\x97\x72\x9f\xc8\x32\xf7\xad\xe3\x9d\xb9\xb7\x50\x7c\xf3\x32\x0c\x83\x5b\x42\xea\x10\xa0\x6c\x83\xe2\x73\xff\xa3\xf0\xb4\xc9\xcb\x31\xdb\x00\xc7\xda\x45\x98\x71\xc8\x0d\x27\xba\xc3\xdc\xb0\xd7\x36\xd0\xde\x3b\x36\x33\xee\x55\x9a\x93\xda\xdf\x4e\xfb\x5f\x75\xda\xcd\xed\xa4\x35\xc5\x3e\xc4\x74\x9e\x36\xae\x8e\x0f\x9b\x97\xb4\xb7\x59\xce\xe6\xd4\xcf\x6e\xeb\x2e\x55\xb7\x97\x34\xa5\xc1\xab\x35\xd6\xbb\xfc\x8d\x5c\x25\xa7\xb2\xaf\x3a\xcd\x20\xda\x83\x86\xe3\x4f\xbf\x08\xb4\x1b\xd8\x1a\x1f\x06\xde\xc7\xb8\x2f\x1b\x29\x1a\xdc\x94\x4c\x36\xb4\x1d\x48\x3e\x81\x29\x4f\x2f\xa5\x68\x40\xea\xd2\x7d\x9a\xb3\x09\xdf\xac\x49\x6f\x60\xda\x54\x5c\xbb\x5f\x22\x04\x8b\x05\x8d\xff\x08\x8f\xd8\x22\x1b\x67\x76\x58\xad\x68\xe3\xc8\xd1\xd9\x31\xba\xd7\x77\x84\xa7\x5c\xf3\xc5\xf0\xee\xfd\xd1\x1a\x50\x7d\xfb\x3d\x88\x60\x5c\xfa\xb7\xad\xc6\x64\x56\x6e\xc7\xfb\xda\x7c\x57\x31\x92\xb0\x63\xd6\x91\xcc\xaa\xe1\xea\xdf\x01\x6c\x2c\x8a\x6f\x9f\x68\x60\x08\xa2\x77\x8e\x73\x5d\xac\x76\xb1\xdf\x2b\xff\x27\x12\xe6\xa1\xde\x4d\xea\xa8\xc7\x3a\x3f\x29\x0a\xf3\x25\x9d\x57\x2e\xcc\xd4\x46\x87\x3f\xc8\x93\xb1\xb9\x71\xe2\xe3\x26\xbe\xf4\xce\x95\xb7\xa4\xf9\xa7\x97\xb4\x9f\x96\xe5\xff\xce\xe3\x7b\xe4\xf1\x1d\xc9\xce\x26\x3a\xeb\xff\xfb\x34\xd5\xeb\xcc\x57\x4b\xdf\xf0\x52\xbf\xae\x75\x59\x99\xd5\xc4\xa8\xa0\x12\xd1\x2e\x71\x7e\xb0\xdb\x37\x9f\xf8\x84\x62\xbb\x0e\x1c\x0c\x91\x22\x47\x30\xfe\xff\x19\x0d\xee\xdd\x68\x91\xc9\xdd\x55\xd7\xbe\x46\x7f\xd2\x19\xb5\x3f\x76\xd9\x54\x6d\xb1\xcf\x5f\x35\xf6\x1b\x00\x4c\xaf\x41\x3e\x94\xb9\x29\x0b\xca\x3d\x1e\x1d\xaf\x7e\x13\xb2\x5c\x2c\x6c\xea\xf3\x2a\x8d\xff\x5d\x69\x2f\xd6\xed\xb1\x0e\x7e\x5d\xad\x36\x17\x2e\x2c\x1a\x7c\xd0\x20\x6b\x42\x28\x22\xd2\x2f\xe5\xda\xb9\xc7\x2b\x40\x74\xa3\xeb\x2f\xb2\xfb\xc4\xde\x11\x70\xe3\x05\x62\xe4\x33\xf6\x19\x98\xba\xb5\x58\xc4\x65\x5d\xc0\x07\x4f\xbe\x4b\x21\xb5\x62\xff\x9f\x98\x87\x25\xda\xa3\x85\xe8\x98\xf1\xa6\x81\xba\x88\xdd\x08\x32\x58\x17\xbb\x73\xcc\xea\x3e\xee\x6b\x93\x96\xe3\x4e\xba\x63\xe6\xc4\x70\xd6\xfa\xb8\xe1\xc9\x85\x7f\xe2\x0d\x6e\x43\xd0\x4d\xf1\xe5\x4f\x32\x7e\x87\xfd\x26\x9b\x62\x7f\x80\x2c\xa6\xbc\x79\x4b\xdb\xb5\x3f\x43\xea\x74\x35\xa5\x86\x29\xd2\xad\xd6\x9b\x95\xee\x07\x46\x66\x9e\xfa\x81\xe8\x88\xb5\x03\x3f\xf3\x6a\x66\x7f\x77\xd4\x2d\xdf\x7b\x79\x57\x2b\xfc\x47\x7d\x6a\xb3\x5e\x89\xfb\xa5\x91\x41\xb4\xf5\x95\xd5\xd8\x3e\xde\xb2\xbf\xf5\x76\x3a\x89\x47\xe9\x2a\x1d\x4a\xd0\x3a\xca\xfe\xfd\x4c\x27\x77\xad\x75\x34\x7b\xe4\x2a\x77\xc1\xf8\xe4\x0b\xd6\x7f\x02\x00\x00\xff\xff\x61\xa8\x7a\x00\x24\x2c\x00\x00")

func controllerGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGoTempl,
		"controller.go.templ",
	)
}

func controllerGoTempl() (*asset, error) {
	bytes, err := controllerGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller.go.templ", size: 11300, mode: os.FileMode(420), modTime: time.Unix(1536310344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x51\x8f\x9c\x36\x10\xc7\x9f\xf1\xa7\x98\xa2\x48\x5d\xaa\x3d\xac\x7b\xab\xa2\xa6\x0f\x6d\x2e\xc9\x2a\xd1\x5d\x95\x5b\x29\x8f\x8d\x17\x06\x18\x2d\xd8\x96\x3d\xec\x66\x85\xf8\xee\x95\x6d\xd8\x54\xa9\xd2\xbb\xf0\x02\x0c\xf6\x7f\xe6\xf7\xf7\x0c\x52\xc2\xef\xe9\x82\xd7\x0f\x70\xff\xb0\x87\xbb\xd7\xbb\x3d\xec\xdf\xed\x1e\xe1\xcd\xee\xc3\x1d\xfc\x76\xbd\x84\x94\xb0\xef\xc8\x43\x43\x3d\x02\x79\x50\x23\x9b\x16\x35\x3a\xc5\x58\xc3\x89\x14\x7c\x56\x67\x7f\x63\x6c\x88\x18\x77\x53\x99\x1a\x5b\xd4\x60\x9d\xa9\xd0\xfb\xcf\x41\x60\xd7\xc0\xc5\x8c\x3f\xd7\xd0\xd3\x11\x81\x3b\x84\xaa\x53\xba\x45\x50\xfa\xc2\x1d\xe9\x16\xd4\xc1\x8c\x0c\x7c\x4d\x34\xa8\x23\x02\xd6\xc4\x1e\xd8\xc4\x1d\x25\xe3\x60\xfb\xa0\x96\x2a\xd1\x31\x6a\x8f\xad\x5c\x32\x4a\xe5\x3d\xb2\x87\x9a\x1c\x56\x6c\xdc\xa5\x14\xc2\xaa\xea\xa8\x5a\x84\x0e\x7b\x8b\xce\x0b\x41\x83\x35\x8e\x61\x23\x32\x75\xf6\x55\x4f\xa8\x19\xf2\x96\xb8\x1b\x0f\x65\x65\x06\x59\x75\x8e\x3c\x1b\xdb\xa1\xeb\x90\xb4\xfc\x37\x9a\x8c\xc9\xe2\x9e\xe5\xe6\x91\xe5\x09\x9d\x27\xa3\xb1\x96\x7c\xb1\x58\xcb\x75\x75\xa9\xce\x5e\x9e\x6e\x55\x6f\x3b\x75\x9b\x8b\xec\xc7\xb2\x18\xdd\x50\x9b\x8b\x6c\x40\x56\xa7\x5b\xc8\x8f\xbf\xfa\x92\x8c\x54\x96\x06\x55\x75\xa4\xd1\x5d\xe2\x42\x65\xc9\xcb\xb0\x48\x9e\x6e\x73\x51\x88\xe0\xcf\x3d\x9e\xe1\x13\xf5\x3d\x38\xe4\xd1\xe9\x15\x3e\x18\x79\x40\xb0\xc1\xa6\x1a\x48\x2f\xbe\x46\x5b\x15\xa3\x17\xcd\xa8\xab\xb0\x79\x53\xc0\xbb\x65\xcb\x24\xb2\x45\x64\x89\x4c\x22\x03\x78\x3f\x1e\xd0\x69\x64\xf4\x1f\xd1\x9b\xd1\x55\x78\xaf\x06\x7c\xf9\x9d\xf8\x56\x64\xd9\x34\xdd\x80\x8b\x27\xfe\x82\x74\x8d\x5f\xb6\xf0\x02\x7b\x1c\x82\xfb\x2f\x5f\x41\xb9\x63\x1c\x3c\xcc\xb3\xc8\xb2\xb7\xc8\xd3\xb4\x7e\x2c\x1f\x2d\x56\xe5\x7b\xd2\xf5\x3c\xff\x71\x49\x49\x9e\x58\xb0\x66\xc3\x10\x12\xd9\x2c\xe6\xe8\xc9\x0a\x54\x63\x43\x1a\x3d\xa8\xbe\x8f\xf4\x29\x0e\x01\x9d\xc9\x68\x0f\xdc\x29\x06\xe5\x10\xf0\x8b\x35\xc1\xa8\xff\xd8\x14\x8e\xf9\xaa\xe7\xd9\x8d\x15\xc3\x24\xbe\xe7\x4a\x94\xde\x78\x76\xa4\xdb\x02\xd6\x07\xf1\x7c\x47\x9e\xe0\x4d\xfa\xbf\xa4\x86\x29\xff\x8c\xb7\x2d\xa4\x34\xeb\xbd\x80\x0d\x69\x46\xd7\xa8\x0a\xa7\x79\x0b\xe8\x9c\x71\x4b\x0d\xc9\xa7\x59\x88\xe7\x16\x24\xe5\x53\x47\x00\xe7\xd0\x7c\x0d\xe9\x3a\x3a\xe7\x16\x37\xe0\x70\x01\xad\x06\x4c\x7d\xf6\x84\xc6\x26\x01\xc1\xb7\x60\x41\xe0\x4a\x17\x5e\xbc\x55\x15\xfe\x2f\x67\x68\xe2\xde\xb4\x2d\xba\x00\xb2\xe8\x7d\x88\x01\x91\xa5\x39\x7e\x44\xde\xc2\xdf\xe1\xf3\xf5\xaf\x50\xde\xe3\xf9\x8d\x71\x29\xef\x52\x4d\xf9\xf1\xee\x71\x9f\x22\x45\x18\x8c\xc4\x15\xf3\x44\xe9\x55\xab\xfc\x96\xec\xaf\x7e\x74\xaa\x0f\x5c\xf3\xbc\xb9\x56\x5d\x94\x6f\x91\xe3\xeb\x16\xd2\x9c\x87\xc0\x83\x8d\x8d\x38\xcd\x85\xc8\xa8\x89\xda\x3f\xbd\x02\x4d\x7d\xe0\x58\x40\xca\x4f\xc4\xdd\x5d\xa0\xdb\xa0\x73\x45\x99\x1e\xf3\xc8\x0b\x2d\x32\x87\x5f\xaa\x0f\xdd\x6c\x2c\x55\x79\x21\xb2\x75\x8c\xf3\x3c\x96\x1b\x06\xe3\x3a\xda\x5f\x41\x34\xf5\x62\x16\x5f\xdb\xe2\x9f\x00\x00\x00\xff\xff\x17\x2c\xbb\xaa\x28\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1576, mode: os.FileMode(420), modTime: time.Unix(1536310344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(420), modTime: time.Unix(1536301391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cft.go.templ": cftGoTempl,
	"controller.go.templ": controllerGoTempl,
	"template_functions.go.templ": template_functionsGoTempl,
	"types.go.templ": typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cft.go.templ": &bintree{cftGoTempl, map[string]*bintree{}},
	"controller.go.templ": &bintree{controllerGoTempl, map[string]*bintree{}},
	"template_functions.go.templ": &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ": &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

