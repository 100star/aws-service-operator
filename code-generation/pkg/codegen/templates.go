// Code generated by go-bindata.
// sources:
// assets/cft.go.templ
// assets/controller.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\x9b\xc8\x13\x7f\x0d\x9f\x62\xfe\x56\xd5\x3f\x44\x0e\xbe\xbe\xb5\x2e\x27\xf5\x9a\x3e\x44\xad\x92\x2a\x76\xdb\x17\x51\xd4\xae\x61\x8c\xb7\xc1\x2c\xc7\x2e\xf1\xf9\x2c\xbe\xfb\x69\x1f\x30\x0b\x36\x76\xdc\xf6\xda\xeb\xc9\xa8\x95\x61\x99\xf9\xcd\xe3\xce\xec\x84\xc1\x00\x7e\xd3\x17\x9c\x5f\xc1\xe5\xd5\x18\x9e\x9f\x5f\x8c\x61\xfc\xea\x62\x04\x2f\x2e\xde\x3c\x87\x5f\xd7\x97\x3b\x18\xc0\x78\x46\x39\x4c\x69\x82\x40\x39\x90\x42\xb0\x18\x53\xcc\x89\xc0\x08\xee\x29\x81\x4f\x64\xc1\x4f\x59\x26\x57\x58\x7e\x1a\xb2\x08\x63\x4c\x21\xcb\x59\x88\x9c\x7f\x92\x00\x17\x53\x58\xb2\xe2\xff\x11\x24\xf4\x0e\x41\xcc\x10\xc2\x19\x49\x63\x04\x92\x2e\xc5\x8c\xa6\x31\x90\x09\x2b\x04\x88\xb5\xa0\x39\xb9\x43\xc0\x88\x0a\x0e\x82\x29\x8e\x40\xe0\x3c\x4b\x24\x9a\xd6\x24\x55\xab\xd9\x5d\x3c\x30\x12\x07\x84\x73\x14\x1c\x22\x9a\x63\x28\x58\xbe\x0c\x5c\x37\x23\xe1\x1d\x89\x11\x56\xab\x60\x94\x61\x18\x5c\x23\x67\x45\x1e\x62\x70\x49\xe6\x58\x96\xae\x4b\xe7\x19\xcb\x05\x78\xae\xd3\xc3\x3c\x67\x39\xef\xb9\x4e\x2f\xa6\x62\x56\x4c\x82\x90\xcd\x07\x64\xc1\xe5\xff\x53\x1e\xdd\x9d\xc6\x4c\xde\xee\x26\xe0\x98\xdf\xd3\x10\x07\x61\xc2\x8a\x68\xca\xf2\x39\x11\x94\xa5\x3d\xd7\x21\x0b\xfe\xfe\x09\x49\xb2\x19\x79\x02\x36\x7f\x38\xcb\x29\x17\x2c\x9b\x61\x3e\x43\x9a\x0e\x6c\x5f\x0e\xa4\x75\x24\xa3\xbc\x82\x5d\xbf\x09\xa4\xd8\x7b\x83\xd7\xd2\x68\x2f\x62\xc8\xd2\x29\x8d\x0f\xe5\x9a\x61\x92\xa1\xf4\x8f\xef\xca\x20\x5c\xe2\x02\xaa\x34\xe0\x40\x20\xc5\x05\xb0\xc9\x67\x0c\x85\x3b\x2d\xd2\x50\xbe\xf7\xb4\x20\x38\xd1\xbf\xc1\x33\xf5\xd3\xef\x0a\x06\x9c\x58\x3e\x0a\x2a\xa2\xd7\x34\x8d\xca\xb2\x0f\x82\x65\x34\x7c\x7a\x7d\x09\x5c\xe4\x34\x8d\x7d\x38\x79\xd6\x70\x31\xac\x5c\x27\x47\x51\xe4\x29\x3c\x6e\xbe\x59\xb9\x8e\xd3\x44\x1b\x76\xa9\xd0\x77\x1d\x47\x2b\x3b\x74\xe4\xa5\xef\xfb\x2e\x00\xac\x15\x18\x82\xbe\xaa\xe7\xbe\xeb\x94\x6e\xa9\x7c\xd2\xd2\x28\xc2\x29\x4d\x91\xab\x3c\xed\xb2\x39\x9c\x0a\xee\x8a\x65\x86\x6d\x66\x2e\xf2\x22\x14\xd2\x2a\xe3\xc5\xea\x6a\x7a\xd3\x6d\x99\xb6\xcb\x89\x6e\xad\xb4\xc1\xd2\xbe\x34\xda\x8f\x04\x09\xef\xa4\x5a\xa0\xfd\xa8\x15\x4f\xe5\x02\x9b\xaa\x7b\x2e\x29\x60\x42\x38\x46\xc0\xf4\xfe\x6b\x6d\x7d\xa5\x92\x8a\xbf\xc7\xdb\x11\xf2\x6b\x09\x9e\x6f\x44\x5b\x51\x33\xf9\x15\xd4\x44\x3c\xa8\x4c\x4d\x0a\x2e\x30\x97\x8b\x7d\xe8\x75\xb8\xb2\xd7\x07\xde\x32\x38\xd0\x1c\x5b\x97\x79\x46\x42\xf4\x8d\xe9\x2f\x51\x5c\x15\x22\x2b\x04\x37\xb6\x5b\xe6\x32\xf3\x62\x9a\xb3\xb9\x5a\x3e\x47\x1e\xe6\x74\x82\x4a\x51\x0e\x21\x49\x92\x6e\x93\x6b\x64\xcf\x07\x6f\x4e\xb2\x1b\x6d\xf8\xad\xfe\xe9\x83\xaa\x3a\xbe\xf4\x43\x25\x68\x78\x06\x1b\x74\xab\xd2\x75\x38\x72\xf5\x72\xed\x96\xa7\x1f\x46\x23\xe4\x9c\xb2\xd4\x75\xf8\x7d\x28\xdf\x35\xcb\x4e\x20\x37\xa1\x64\xf3\x5d\xd7\x51\xd6\x5c\xa4\x95\x88\x16\x65\xd3\x28\x45\x26\xf7\xcd\x3a\x18\x32\xeb\xc9\x42\x46\x47\xaa\xe3\xd9\x61\xf2\x7d\xb5\x05\x2a\x03\x94\x49\x4a\xcf\xfb\xb0\x05\xeb\x3d\xb6\x94\xf0\x5d\x87\x4e\x15\xed\xff\xce\x20\xa5\x89\x74\x41\x95\x0b\x29\x4d\x14\x8c\xc4\x75\x64\xb1\x61\x02\x78\x91\x23\xd0\xa9\xee\x11\x94\x03\xde\xcb\x26\xc3\x38\xa7\x93\x04\x15\x56\x82\xa9\xa7\x75\xd0\xda\x71\x5f\x42\x3f\xd9\x06\xcc\x72\xae\x9c\xd3\x4b\x99\x0e\x73\x15\x78\x8c\x60\x41\xc5\x0c\xc4\x8c\x08\x93\x00\x72\x07\xf4\x7c\x6d\xe2\x94\xe5\xf0\xb1\x2f\x73\x42\x5a\x98\xab\x1e\xd6\x10\x79\xf3\xcb\x6d\x50\xa5\x92\x94\x6b\x82\x7a\x73\xc2\x0a\x61\x5e\xbc\xc6\xe5\x2d\x9c\x81\xb5\xf2\x9e\x24\x05\x6a\x01\x46\x4f\xc3\xa6\x9d\x60\x8a\x4b\x8e\x44\x68\x47\xc2\x82\x26\x09\x84\x6a\xc1\xca\x54\xa3\x38\x02\x2f\xb2\x2c\xa1\x18\x41\x46\x72\x32\xe7\xdd\xd9\x69\x61\xca\xf4\xd4\x52\xe1\xa4\x95\x1b\x16\xd5\x95\x15\xe2\x3a\x73\xbf\x32\x33\xc3\xa9\x6a\xed\xd2\x98\xe1\xd9\xba\x0e\xbc\x44\xa1\xd4\x7d\x51\xf1\x8c\x0d\xd1\xba\x2e\x1c\x56\x0b\xaa\xc7\xf1\x32\xc3\xb2\x0c\xb6\x63\x77\x14\x8c\x07\xf3\x9a\xaa\xb2\x6f\xb7\x59\x1e\x3d\x7c\xab\x39\x95\xc0\x77\xd7\x6f\x86\x36\x65\xed\x47\x45\x76\xc9\x04\x9d\xd2\x50\x49\x7c\x7a\x7d\xc9\x87\x70\x73\x7b\x62\xca\x89\xeb\x38\x4e\x43\x46\xd5\x18\x14\x67\xd9\xaf\x92\x51\x7b\x55\x35\x05\x2b\x34\x5a\xfd\xb7\x32\xb9\xbc\xde\xb5\x45\xd4\x55\x83\xfd\x1a\xeb\x3d\xe6\x32\x2f\xf6\xc2\x19\xba\x6d\x88\x2d\x12\xdf\x75\xd2\xca\xf5\x9d\xb0\xeb\xe0\x74\xa9\x68\x22\xe7\x84\x75\xaf\xe9\x04\xb3\xfa\x91\x82\xdb\x6c\x53\xbe\xbb\x5a\x9d\x9a\xfa\xf0\x48\xb0\x4c\x42\x69\x91\xbf\xb3\x68\x19\x8c\xc2\x19\xce\x49\xf0\x36\x97\xad\x53\x50\xe4\x65\x29\x1b\xf9\xa9\xac\x6f\x5b\x56\x0d\x4e\x8a\x5c\x1e\xb9\x25\x54\x83\xa6\x66\x35\x99\x41\xff\xc2\x48\xf3\x4a\xd9\xc1\x6b\x5c\x96\xe5\x6a\x65\xf8\xf5\xa3\xa4\x94\x48\xbd\x7a\xbd\x4a\xab\xb2\xec\x69\x44\x4c\x38\x3e\x1c\x46\xfe\x2b\xcb\xe0\x6a\xf2\x39\x58\xad\x1e\x35\xf6\x8b\x01\x18\xa9\x23\x8d\xe2\x53\x11\xa8\x1f\x15\x6b\xaf\x16\x9c\xee\x53\x5f\x55\xcc\x75\xa7\xa9\x82\x54\x9b\xef\xed\xd1\xb9\xbf\xe6\x39\x27\x82\xac\xae\x26\x9f\x87\x2a\x2d\x1e\x35\x0f\x9d\xfa\x8c\x35\x84\xba\xe2\xbc\xd2\x6c\xc3\x35\xbf\x2c\x64\x7e\xb9\xab\x99\x59\x6d\x51\x6e\x2b\x80\x1d\xba\x75\xa6\xdc\x66\x98\x14\x7d\xaf\x6f\x9d\x9b\xe4\x56\xa6\xd3\xe5\x2e\xdb\x95\xdf\x7c\xbf\xe5\x66\x3b\xd4\x2a\x91\x3c\xfc\x43\xa5\xad\x0a\x20\xf4\xec\x3a\xd0\xf3\xdb\xa1\xd9\xa5\xb3\xc2\xd8\xab\xf0\x86\xe7\x75\xd1\xf0\x1b\xba\x3d\x28\xcb\x4d\x3e\x3a\x6d\xd9\x3b\x73\xda\x62\x3a\x28\x89\xf7\x67\xed\x41\x69\xfa\x83\xf3\xf2\x1b\xc7\x74\xc3\x0d\xdb\xb2\x4e\xdd\xd6\x77\xae\xa3\x0e\x2c\x28\x30\x57\x5d\xf3\xe6\xb6\x7d\x14\x79\x5b\xbd\x97\x07\x62\x8b\xf8\x0c\x48\x96\x61\x1a\x79\xf5\x5a\x1f\xec\xb4\xf5\x1f\x4e\x5e\xb7\x95\x7d\x1c\xa9\xd5\x37\xf6\xd1\x86\x3f\xa8\x39\xec\x55\x6c\x47\xb5\xe8\xae\x13\x87\x80\xfa\x5d\xc1\xb6\xce\x48\xc1\x08\xc5\x3a\xb6\xdc\x82\xf2\x5b\xc7\x90\x31\x89\x37\x73\x73\x4c\xe2\x2f\x3d\x87\xec\xc7\xfb\xb2\x83\x48\x37\xee\x97\x9c\x44\xba\xd1\x1e\x72\x14\x71\x1d\x41\xe2\x8e\x0d\x35\x26\x6a\xb6\x54\x04\xeb\x48\xca\xa7\xe6\xf6\x19\x93\xd8\xdf\x4d\x55\xfb\xb3\x83\xd0\x76\x4d\x07\x49\xd3\x62\x7f\x33\x45\xc6\x24\xe6\x8a\xd6\x77\x5d\xb0\x0b\x18\xe8\x71\xd3\x9e\x67\x5a\xb3\xa6\x2e\x7a\x66\x96\x7a\x97\x45\xcd\x59\xaa\x50\x0b\x6a\x78\xc2\x3f\x29\x17\x34\x8d\xf5\x50\xd5\x3d\x3b\x59\x18\x9e\x66\x8f\x76\xfd\xf1\xa5\x7b\xbc\xb2\x80\x7e\x9e\xf1\xca\x58\x7c\xc8\x54\x75\x30\xcb\x03\x87\x29\xcb\x7f\xc7\x61\xea\x38\x4c\x1d\x87\xa9\x7f\xc3\x30\x65\x36\xfb\x77\x38\xaa\x1e\x27\xa8\x7f\x62\x82\x82\xff\xd2\x04\xf5\xfd\x92\xf1\x38\x37\x1d\xe7\xa6\xe3\xdc\x74\x9c\x9b\x7e\xb2\xb9\xc9\x9e\x65\x76\xcd\x4d\xe7\x98\x60\x63\x6e\x8a\xd4\x42\xfd\x0d\xaa\x7b\x5c\xb2\x58\x3d\x1f\xbc\x6f\x3a\xe1\xec\xfb\xb4\xb9\x96\xac\xe7\x83\x72\xc3\x3f\xf6\x37\x67\x7b\x40\x90\xde\xfa\x68\x3b\xca\xb6\x62\x97\xa3\x3e\x10\x2a\xde\xa5\x82\x26\x8a\x54\x73\x45\x87\xba\x6c\x2b\xc8\x77\x77\xde\x57\x7f\x17\x06\xcb\x7f\xdb\x4c\x7a\xc6\xe6\x99\xfc\xed\x74\xe8\xdf\x01\x00\x00\xff\xff\xd2\xd9\xc6\x1d\xae\x24\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9390, mode: os.FileMode(420), modTime: time.Unix(1538374742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6f\x6f\xdb\x36\xb7\x7f\x2d\x7d\x0a\x4e\x77\xeb\xa4\xce\x95\x6f\xdf\x5d\x04\x37\x77\xc8\x1c\xaf\x0b\xd6\x25\xb9\x49\xba\xbe\x28\x8a\x8c\x91\x8e\x6d\x36\xb2\xa8\x91\x74\xdc\xcc\xf3\x77\x7f\x70\x78\x48\x99\x72\x6c\xd7\xde\xfa\x0c\x78\x86\x15\x05\x22\x91\x87\x87\xe7\xcf\xef\xfc\x21\xe5\x7e\x9f\xfd\x1f\xfd\x63\xa7\x17\xec\xfc\xe2\x86\x0d\x4f\xcf\x6e\xd8\xcd\x0f\x67\xd7\xec\xfb\xb3\xd7\x43\xf6\xbf\xed\xbf\xb8\xdf\x67\x37\x13\xa1\xd9\x48\x54\xc0\x84\x66\x7c\x66\xe4\x18\x6a\x50\xdc\x40\xc9\x1e\x04\x67\xbf\xf0\xb9\x7e\x21\x1b\x1c\x91\x8a\xf9\xb9\x5f\x70\xe5\xd9\x88\x3d\xca\xd9\xd7\x25\xab\xc4\x3d\x30\x33\x01\x56\x4c\x78\x3d\x06\xc6\xeb\x47\x33\x11\xf5\x98\xf1\x3b\x39\x33\xcc\xb4\x3b\x4c\xf9\x3d\x30\x28\x85\xd1\xcc\x48\xbb\x22\x37\x30\x6d\x2a\xe4\x46\x22\xd4\x76\xb4\xb9\x1f\xf7\x0b\x59\xc2\x18\xea\x3e\xd7\x1a\x8c\x66\xa5\x50\x50\x18\xa9\x1e\xf3\x38\x6e\x78\x71\xcf\xc7\xc0\x16\x8b\xfc\xba\x81\x22\xbf\x02\x2d\x67\xaa\x80\xfc\x9c\x4f\x61\xb9\x8c\x63\x31\x6d\xa4\x32\x2c\x8d\xa3\xc5\xe2\x05\x13\x23\x46\x74\x67\x7a\x30\xd3\x46\x4e\xc5\x6f\x50\x2e\x97\x71\xc4\xa6\x60\xf8\xc3\x4b\x96\xdc\xff\x8f\xce\x85\xec\xf3\x46\x4c\x79\x31\x11\x35\xa8\xc7\x3e\xca\xc0\x1b\xa1\xfb\x48\xd4\x7f\x78\x99\xc4\x51\x32\x16\x66\x32\xbb\xcb\x0b\x39\xed\x17\x13\x25\xb4\x91\xcd\x04\xd4\x04\x44\xdd\x0f\xcd\x64\xd7\x4e\xa0\x6a\x40\xe9\x84\x64\x80\xda\xee\x98\x28\x18\x55\x50\x98\x24\x3e\x90\x5b\x21\xeb\x91\x18\x27\x6b\x0a\xfd\xff\x0c\x66\xa8\x30\x63\x07\x31\xfb\x15\x97\x75\x05\x93\xcd\xbd\x30\x3b\xb9\x78\x0e\x2f\xee\x85\x49\xe2\x88\x37\x02\x3e\x1a\xa8\xb5\x90\xb5\x7e\x78\x79\x07\x86\x77\x0c\xb9\x9a\x7c\x81\x56\x04\xf5\x00\x6a\x65\xd3\x0e\x41\xdf\x2d\x47\x0b\x3b\x06\x45\x25\xa0\x36\x2f\xc6\xb2\x6f\xa4\xac\x74\xbf\xe0\xc5\x04\xd0\x68\x7c\xae\x79\x23\x0e\x53\xd7\xee\x88\x12\x88\x02\xda\x99\x9c\xcf\xd1\x37\x7c\xae\x7f\x7e\xc9\xab\x66\x82\xd2\x7f\x16\xa6\xfd\x07\xc7\x8f\xb8\x93\x26\x87\xf1\xa6\x35\xee\x8f\x06\xd3\x7f\x00\x85\x96\x82\xb2\x6f\x1e\x1b\x28\x3f\xb9\x6f\x07\x24\x1e\xf3\xdc\xa0\xb1\xf3\x4b\x0a\x1e\x42\x8d\x8f\xa0\x6d\x34\x1d\x90\x64\x31\xc6\xa9\x0f\x36\x4c\x17\x18\xab\xf2\xee\x03\x14\x86\x69\x23\x15\xb0\x12\x46\xa2\x16\xc8\x24\x7e\xe0\x6a\x45\x7b\xcc\x2c\xc0\xdc\x3e\x7e\x78\x11\x47\x18\xb1\x47\x8c\xfe\x25\x5b\xe2\x39\xe9\xc5\xd1\x65\x35\x53\xbc\x3a\xda\x42\x47\xb3\x44\xf9\x4a\xc9\x59\xe3\x58\x12\x5a\x72\x3b\x84\xbc\x7a\x71\xf4\x33\x99\xf2\x28\x98\x76\x43\xbd\x38\xba\x2e\x64\xe3\xc5\xd9\x04\x70\x2b\x90\x6e\x78\x01\x96\xb2\xec\xc5\xd1\x8f\xa2\x2e\xbd\x02\x2e\xb8\xf3\x9b\xc7\x06\x2e\x46\x69\x80\xad\xdc\x8b\x8c\xe4\xcb\xe5\x62\x99\x59\x56\x69\x86\x9b\x4e\xa4\x32\x96\xf1\x11\x7b\xf7\x5e\x1b\x25\xea\xf1\x22\xee\xb8\xb0\x55\xd4\xd2\xd6\x48\xcb\x5e\x60\xd8\x22\x95\xb2\x39\x77\x3b\x21\xd2\x45\x68\xb3\x95\x35\x57\x3e\x0d\x52\xc0\xb2\x17\x2f\xad\x87\x07\xb2\x36\x4a\x56\x15\x28\xa6\xa0\x51\xa0\x11\x85\x8c\xb3\x62\x35\xee\x9c\x3e\x92\xaa\xeb\xff\xc2\xfa\x97\x29\x27\x86\x8e\x11\xaf\x21\x43\x6d\xd4\xac\x30\x6c\x11\x47\x94\xd1\x9c\xe5\x9e\xd3\x5b\x3e\xb0\x7f\xec\xa4\x81\x8f\xc6\x4d\x3a\xec\xd0\x58\x10\x55\x1a\x0c\x6b\x5f\xf2\x6b\x0a\x0a\x1f\x13\xde\xf4\x67\xb5\x01\x35\xe2\x05\xc4\x8c\x19\xd9\x88\xe2\xe4\xea\xdc\xb2\x25\x4b\x3b\x9d\xcf\x61\x1e\x48\x59\x28\xe0\x06\x42\x85\x51\xd3\x39\x37\x85\x2d\x6b\x3b\x55\x76\x8b\xcb\x78\x34\xab\x8b\x2e\xdf\xd4\xe9\xdc\xd5\xb6\xc7\xbc\xb6\x5d\x45\x7b\xec\x0f\x2a\x9a\xb1\xe7\x81\x2e\x8b\x38\x52\x60\x66\xaa\x66\xcf\x56\xa3\x8b\x38\x72\x0e\xf0\xd8\xa5\xb7\x1e\x8d\xe3\xf6\x47\xed\xb8\x15\x26\x8e\x3a\x76\x3f\xea\x08\xd7\x8b\xa3\xa5\x33\xe4\xb5\xe1\xca\xbc\x45\x4b\x91\xbd\x40\x5b\xdb\x89\x5a\x1b\x5e\xa3\x79\xe4\x88\x5d\x90\xfd\xae\x37\xdb\x8f\xd7\x25\xe3\x85\xd1\x4c\xda\x66\x60\x4a\x86\x4c\x8b\x50\xab\x2c\xd8\x27\xad\x7d\x50\x3a\x97\xf6\xd0\x33\xcd\x60\x62\xdb\x11\x87\xb8\xc5\x32\x63\xa0\x94\x74\xf6\xa0\xbd\x7e\xe0\x75\x59\x81\xd2\xec\xe8\x98\xd9\x0a\xd3\xc6\xcf\xf0\x01\x6a\xe3\xa6\xbf\x9f\xd5\x85\x46\x83\x9d\x94\x25\x3e\x5b\xc3\x14\xb9\xac\x4f\x4a\x4c\x00\xd1\x9b\xa6\xe4\x06\x68\x06\x87\xe9\x1d\x67\x4e\xa1\x82\x70\x86\xde\xad\xb1\x36\xd7\xf1\xc8\x56\xe6\xc2\xa8\x0a\x45\xb2\x2f\xf9\x39\xcc\xd3\x22\x2f\x3c\x54\x72\xef\x10\x56\xe4\x1d\x17\xb0\x97\x59\x1c\x15\xb9\x87\x78\x8f\xdd\xd2\x7f\xe6\x18\x21\xd7\xfc\x0a\xc6\x42\x1b\x50\xe9\xf6\x5c\xcb\x9e\xed\xcc\x5b\x71\x34\x96\x01\xc3\xc0\x0d\x24\x6e\x60\xb4\xd4\xaa\x45\xe6\x50\x99\xf7\x4a\x16\xa6\x1f\xeb\x0b\x33\xa0\x1a\x89\x5e\xe8\xe8\x94\x5f\x0d\xaf\x6f\x68\x32\xcd\xe2\x88\xf0\xa4\x90\x8e\x02\xe5\x1c\xe6\x6f\x69\x2c\xf5\x6a\xf4\x58\x8b\x86\x1e\x5b\xf7\xb3\x1d\x71\xbb\x91\x22\x8e\x65\x4e\x1a\xec\xd4\x7c\x25\x7f\x1b\x50\xb5\xa8\x10\xf5\x1b\x5d\xd9\xef\xb3\x50\x7d\x36\x17\x55\xc5\x0c\x77\x8d\xf2\x14\xb4\xe6\x63\x8c\x0d\x25\xa7\x76\xc4\x5a\xcf\x62\xbf\x51\xb2\x00\xad\x03\xec\x87\x8c\xb6\xe5\x90\xa9\x1e\xb3\xe7\xe4\x82\x9f\x88\xf9\x77\xb2\x7c\x0c\x40\x5f\xc9\xf1\x98\x8c\xe7\x56\xbe\xb6\x03\x71\x84\x85\x1a\x8d\x16\x98\xce\xe7\xc6\x48\x8c\x90\x71\x6e\xf7\xe6\x77\x15\x20\xa3\x08\xc9\xd8\xb1\x9d\xf0\x66\x47\xf0\xb8\x19\x62\x40\xd3\x6d\xb9\x8c\xa3\x25\x83\x4a\xd3\x7a\xf2\xef\x35\x62\xf6\x16\xe5\x59\x65\xb6\x73\x98\x7f\x2f\x15\xa9\xe4\x14\x25\x0c\xd8\xc7\x2c\x8e\xda\xd0\xd5\x3d\xd4\xcc\x6a\xe3\xb9\xb5\x1e\xa3\x6e\x80\xf0\x9c\x26\x49\x96\xbf\x16\xda\xa4\xd4\xeb\xdb\xe7\x8b\xc6\xb6\x39\x16\xcd\xa8\x22\x72\xfa\xe2\x18\xdd\x69\xe5\x73\xa6\xca\xdf\x0a\x33\x19\xa2\xf9\x52\x50\x2a\xcb\xe9\x31\x21\x83\x8e\xc1\x18\x2c\x05\xdb\x5b\x11\xe4\xed\x81\x02\x4a\xc5\x11\x46\x7d\x84\xb9\xf0\x76\x85\x4c\x54\x80\xea\x77\xab\x58\x7e\x66\x60\xaa\x49\x10\x31\x6a\xc7\x31\xd2\xcc\x4c\xe3\x9f\xe2\xfe\xec\x94\x1d\x93\x85\x2f\xb9\xd2\x50\x3a\x8f\xbf\x4b\x68\xb6\x4c\xde\xd3\x7a\xef\x2a\x15\x06\x79\x3b\xe1\x3d\xd5\x99\x75\xee\x22\x69\xb1\x2b\x88\x2d\x0a\x2c\xa3\x2f\x8e\x59\x92\xb0\x67\xcf\x02\xa0\xd0\xd0\x82\xec\xb8\x41\x20\x6f\x17\x92\x3e\x79\x8f\x72\x27\x57\x17\xaf\x5f\x7f\x77\x32\xf8\xf1\x76\x70\xf1\xd3\xe5\xeb\xe1\xcd\x90\x38\x44\xce\xa3\xa5\x4d\x93\x56\x95\xd4\xe7\xbd\x35\x80\xf6\x76\x2a\x9f\x39\xdb\xad\xfb\xb5\xeb\x0e\xd2\x90\x60\x79\x80\xf0\xa7\x43\x94\x78\x8b\xe8\x33\x1b\xa4\x44\xff\xc7\x64\xdf\x38\xbb\x2e\xc8\x1e\x44\x57\xc0\xb5\xac\x0f\xb0\x85\xd7\xe2\x98\x89\xba\x50\x30\x85\xda\x5c\xc9\xaa\xba\xe3\xc5\xfd\x40\xce\x6a\xb3\x4d\x9d\xc3\x8d\xfd\x37\x31\x58\x1b\x1e\x9d\x6a\x10\xd4\xb6\x8d\x7d\x8b\x6d\x1b\x52\x79\xf7\x81\x09\xdf\xaf\x61\x6f\xb2\x88\x23\xdb\x86\xc8\xbb\x0f\x79\xfa\x7c\x7b\x1d\xca\xf2\x53\x80\x66\x20\x9b\xc7\x14\x0b\x91\x2b\x3d\xb5\x34\x9b\x0f\x7b\x27\x65\x69\x0f\x7a\x62\xc4\xb4\xcf\x20\x5d\xb5\x2d\xa6\x13\xf6\xfb\xef\x3b\x09\x36\x80\xde\x76\x41\x23\x5b\xb5\xbb\x2d\x8a\xc6\xd6\xc4\xb7\x21\x99\xa5\x93\x33\xd3\xcc\xcc\x2a\x65\x8f\x4c\x3e\xb0\x5d\x32\x05\x39\x11\xad\xdb\xdc\xf5\x9f\x79\xa7\x5c\x6d\x4c\xca\x23\x9f\x95\x6d\xeb\xbd\x31\x2d\x53\x35\x60\x5f\x7f\xa5\xbf\x4e\x7a\x4c\xdb\xf7\x2c\xf6\xc7\x36\xf4\x9f\x7d\x59\xc6\x9b\xf6\x3c\xab\x47\x72\x94\x26\xbc\x2c\xa1\xdc\xc9\x9a\xcd\x85\x99\x30\xed\x52\x74\x67\xb3\x9e\xab\xa9\xe9\x73\x32\x86\x4b\xe4\x65\x96\xed\xda\xf2\x41\xc0\x9c\x71\xc3\x26\xc6\x34\xfa\xa8\xdf\x2f\x64\xad\x65\x05\xd8\x25\xe5\x7c\xca\x7f\x93\x35\xdd\x28\x54\x72\x56\x8e\xa4\x9a\x5a\xb7\xf7\x27\x72\x0a\xdf\xfe\x57\xdf\xca\xd1\x2f\xc1\x70\x51\x7d\x4b\x42\x95\xc7\x5f\xe9\x64\x87\x28\xb1\xcf\x01\xdd\xb8\x5c\xf9\xd6\xeb\xb2\xaa\x15\x5b\xb9\xf5\x58\x32\xb8\x1a\x9e\xdc\x0c\x6f\xcf\xce\x6f\x2f\xaf\x2e\x5e\x5d\x0d\xaf\xaf\x93\x1e\x4b\x92\x2d\x65\x77\x1f\x57\x7b\x4f\x5b\xf9\xd0\xd3\x9a\x22\x3c\xb3\xe1\x88\x0e\xa4\xee\xb2\xd2\x40\xe7\xe3\xed\x61\x11\xaa\xd5\x69\x4a\xb7\x87\x2e\xf5\x60\xa9\xac\xca\x8b\xbb\x0f\x3d\x56\xc3\xfc\x62\x43\x20\x4b\x69\x23\xd9\x12\xed\x1f\xcc\x51\x6d\x97\x11\xcf\x43\x72\x80\x8d\xff\xc3\x62\x17\x6d\x4d\x89\xa8\x96\x99\xb5\xda\xa7\x53\x09\xe9\xee\xb3\x89\xbb\xdd\xcc\xcf\xb4\x75\xf7\x40\x4e\x1b\x2c\xda\xa9\xdc\x22\x49\x8f\x8d\x78\xa5\x21\xc3\xee\xe1\x0b\x7f\x4f\x82\x6a\x0c\x7f\x9d\xf1\x0a\x97\x79\x1d\x6f\x1e\x1b\x58\x2e\x7b\xa8\x53\x77\x28\xdb\x95\x74\xa4\xdc\x2b\xeb\xbc\xf1\xb0\x2e\xee\x9d\xea\x9f\x25\xef\xb4\x68\xfc\x74\x72\xa8\x61\xce\x1a\xae\xf8\x54\xb3\xaf\xbe\x79\xb0\x0d\xbf\xac\x4a\x7c\x4e\xac\xce\x14\x5f\xb5\x44\x95\x0e\x4d\x50\x14\xb4\xfb\xa4\x28\x27\x81\xcb\x50\xed\xb6\x7f\x87\x14\x25\xbd\x32\xee\xe1\x93\x49\xea\xcd\xe5\xe9\x5f\x9e\xa4\x18\xdb\x23\x4b\xf9\x88\x5b\x83\x39\xe2\x76\xaf\x6c\x45\xd7\x0d\x7f\x59\xaf\x41\xdb\xa1\x3e\xfb\xb4\x05\x51\x10\x95\xa7\x41\xc3\x9f\xc5\x1b\xac\x7e\x50\x30\xda\xe3\xc3\x01\x4d\x80\xef\xec\xa8\x99\xdb\x82\x72\x3a\x93\xec\x0e\xad\x90\xe7\x1e\xee\xf5\xf6\xda\x55\x87\xe2\x5d\xdf\xaf\xac\xdb\x77\x36\xeb\x4f\x6e\x09\xec\x31\xce\xdf\x92\xad\x1f\xf7\xf7\xb9\x2c\xf8\x13\x67\x77\xd5\x5e\xd1\xec\x77\x72\x5f\x9d\x30\xf2\x57\x60\x52\x3a\x14\xb8\x53\xfc\x2b\xe8\x1c\xe2\x9f\x22\xe6\xb3\x1d\xe1\xc3\xae\xdf\xdd\x57\x59\x2a\x0c\x0b\x7b\x7a\xf7\xab\xc2\x52\x1e\x12\x39\xe6\xa1\x77\x82\x33\xf7\x16\x8a\x6f\x5e\xc6\x71\x74\x4b\x96\x3a\xc4\x50\xae\x41\x09\xb9\xff\x51\xf3\xb4\xc9\xcb\x33\xdb\x60\x8e\xb5\x8b\x30\x0b\xc8\x0d\x27\xba\xc3\x60\xd8\x6b\x1b\xe8\xe0\x1d\x9b\x19\xff\xaa\xec\x49\xed\x1f\xd0\xfe\x5b\x41\xbb\xb9\x9d\x74\xae\xd8\x87\x98\xce\xd3\x16\xea\xf8\xb0\x79\x49\x7b\x9b\xe5\x7d\x4e\xfd\xec\xb6\xee\x52\x77\x7b\x49\x5b\x1a\x82\x5a\xe3\xd0\x15\x6e\xe4\x2b\x39\x95\x7d\xdd\x69\x06\xd1\x1f\x34\x9c\xfe\xf9\x8b\x40\xb7\x81\xab\xf1\x71\x14\x7c\x9a\xfb\xb2\x51\xb2\xc1\x4d\xc9\x65\x17\xae\x03\x29\x26\x30\xe5\xf9\xa5\x92\x0d\x28\x23\xfc\x87\x3a\x97\xf0\xed\x9a\xfc\x06\xa6\x4d\xc5\x8d\xff\xbd\x42\xb4\x58\xd0\xf8\x8f\xf0\x88\x2d\xb2\x05\xb3\xb7\xd5\x8a\x36\x4d\x3c\x9d\x1b\xa3\x7b\x7d\x4f\x78\xca\x0d\x5f\x5c\xdc\x7d\x38\x5a\x33\xd4\xc0\x7d\x0f\x22\x33\x2e\xc3\xdb\x56\xeb\x32\x27\xb7\xe7\x7d\x6d\xbf\xab\x58\x49\xd8\x31\xeb\x48\xe6\xd4\xf0\xf5\xef\x00\x36\xce\x8a\xef\x9e\x68\x60\x09\x92\xf7\x9e\x73\x5d\xae\x76\x71\x5f\x2f\xff\x23\x12\xe6\xa1\xe8\x26\x75\xf4\x63\x5d\x9c\x94\xa5\xfd\xae\xce\x2b\x1f\x66\x7a\x23\xe0\x0f\x42\x32\x36\x37\x5e\x7c\xdc\x24\x94\xde\x43\x79\x4b\x9a\x7f\x7a\x49\xfb\xe7\xb2\xfc\x3f\x79\x7c\x8f\x3c\xbe\x23\xd9\xb9\x44\xe7\xf0\xbf\x4f\x53\xbd\xce\x7c\xb5\xf4\x2d\x17\xe6\x4d\x6d\x44\x65\x57\x13\xa3\x92\x4a\x44\xbb\xc4\xe3\x60\x37\x36\x9f\x60\x42\xb3\x5d\x07\x0e\x86\x96\x22\x20\x58\xfc\xff\x85\x0e\x0f\x6e\xb4\xc8\xe5\xfe\xaa\x6b\x5f\xa7\x3f\xe9\x8c\xda\x9f\xbe\x6c\xaa\xb6\xd8\xe7\xaf\x1a\xfb\x0d\x06\xf4\x5f\xf9\xb1\x2c\x68\xff\x78\x74\xbc\xfa\x85\xc8\x72\xb1\x70\xa9\x2f\xa8\x34\xe1\x77\xa5\xbd\x58\xb7\xc7\x3a\xf8\x75\xb5\xda\x5e\xb8\xb0\x64\xf8\xd1\x80\xaa\xc9\x42\x09\x91\x7e\xa9\xd6\xce\x3d\x41\x01\xa2\x1b\xdd\x70\x91\xdb\x27\x0d\x8e\x80\x1b\x2f\x10\x93\x90\x71\xc8\xc0\xd6\xad\xc5\x22\x15\x75\x09\x1f\x03\xf9\x2e\xa5\x32\x9a\xfd\x77\x66\x1f\x96\xe8\x8f\xd6\x44\xc7\x8c\x37\x0d\xd4\x65\xea\x47\x90\xc1\xba\xd8\x9d\x63\x56\xf7\x71\x5f\x9f\xb4\x1c\x77\xd2\x1d\x33\x2f\x86\xf7\xd6\xa7\x1d\x4f\x10\xfe\x89\x37\xb8\x0d\x99\x6e\x8a\x2f\x9f\xc9\xf9\x1d\xf6\x9b\x7c\x8a\xfd\x01\xb2\x98\xf2\xe6\x1d\x6d\xd7\xfe\x28\xa9\xd3\xd5\x08\x03\x53\xa4\x5b\xad\xb7\x2b\xfd\xcf\x8d\xec\x3c\xf5\x03\xc9\x11\x6b\x07\x7e\xe6\xd5\xcc\xfd\x0a\xa9\x5b\xbe\xf7\x42\x57\x2b\xfc\x27\x31\xb5\x59\xaf\xcc\xff\xee\xc8\x5a\xb4\xc5\xca\x6a\x6c\x1f\xb4\xec\xef\xbd\x9d\x20\x09\x28\x7d\xa5\x43\x09\x5a\xa0\xec\xdf\xcf\x74\x72\xd7\x5a\x47\xb3\x47\xae\xf2\x17\x8c\x4f\xbe\x60\xfd\x2b\x00\x00\xff\xff\x6b\x55\xf6\xeb\x4a\x2c\x00\x00")

func controllerGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGoTempl,
		"controller.go.templ",
	)
}

func controllerGoTempl() (*asset, error) {
	bytes, err := controllerGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller.go.templ", size: 11338, mode: os.FileMode(420), modTime: time.Unix(1538375832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x8e\xdb\x36\x10\x3d\x8b\x5f\x31\x15\x02\xd4\x2a\xbc\x22\xf6\x56\x04\x4d\x0f\x6d\x36\x89\x91\x60\xb7\xc8\x1a\xc8\xb1\xa1\xa9\xb1\x34\xb0\x44\x12\xe4\xc8\x8e\x21\xe8\xdf\x0b\x92\xb2\x53\xa4\x48\x77\xa3\x0b\xa5\x11\xe7\xbd\x79\x8f\x33\x94\x12\x7e\xcf\x0f\xbc\x7e\x80\xfb\x87\x2d\xdc\xbd\xde\x6c\x61\xfb\x6e\xf3\x08\x6f\x36\x1f\xee\xe0\xb7\xeb\x23\xa4\x84\x6d\x47\x01\xf6\xd4\x23\x50\x00\x35\xb2\x6d\xd1\xa0\x57\x8c\x0d\x1c\x49\xc1\x67\x75\x0a\x37\xd6\xc5\x88\xf5\x37\xda\x36\xd8\xa2\x01\xe7\xad\xc6\x10\x3e\x47\x80\xcd\x1e\xce\x76\xfc\xb9\x81\x9e\x0e\x08\xdc\x21\xe8\x4e\x99\x16\x41\x99\x33\x77\x64\x5a\x50\x3b\x3b\x32\xf0\x95\x68\x50\x07\x04\x6c\x88\x03\xb0\x4d\x19\x35\xe3\xe0\xfa\x88\x96\x2b\x31\x29\xea\x0e\xad\x5c\x18\xa5\x0a\x01\x39\x40\x43\x1e\x35\x5b\x7f\xae\x85\x70\x4a\x1f\x54\x8b\xd0\x61\xef\xd0\x07\x21\x68\x70\xd6\x33\xac\x44\xa1\x4e\x41\xf7\x84\x86\xa1\x6c\x89\xbb\x71\x57\x6b\x3b\x48\xdd\x79\x0a\x6c\x5d\x87\xbe\x43\x32\xf2\xdf\xd2\x64\x22\x4b\x39\xcb\x12\x90\xe5\x11\x7d\x20\x6b\xb0\x91\x7c\x76\xd8\xc8\x80\xfe\x48\x1a\xaf\x59\xb5\x3a\x05\x79\xbc\x55\xbd\xeb\xd4\x6d\x29\x8a\x1f\x63\xb3\x66\x4f\x6d\x29\x8a\x01\x59\x1d\x6f\xa1\x3c\xfc\x1a\x6a\xb2\x52\x39\x1a\x94\xee\xc8\xa0\x3f\xa7\x8d\xca\x51\x90\x71\x93\x3c\xde\x96\xa2\x12\xd1\xa7\x7b\x3c\xc1\x27\xea\x7b\xf0\xc8\xa3\x37\x17\x13\xa2\xa1\x3b\x04\x17\xed\x6a\x80\xcc\xe2\x6f\xb2\x57\x31\x06\xb1\x1f\x8d\x8e\xc9\xab\x0a\xde\x2d\x29\x93\x28\x16\x90\x25\x32\x89\x02\xe0\xfd\xb8\x43\x6f\x90\x31\x7c\xc4\x60\x47\xaf\xf1\x5e\x0d\xf8\xf2\x3b\xf1\xb5\x28\x8a\x69\xba\x01\x9f\x4e\xfe\x05\x99\x06\xbf\xac\xe1\x05\xf6\x38\xc4\x53\x78\xf9\x0a\xea\x0d\xe3\x10\x60\x9e\x45\x51\xbc\x45\x9e\xa6\xcb\xcf\xfa\xd1\xa1\xae\xdf\x93\x69\xe6\xf9\x8f\x73\x26\x79\x62\xc3\x85\x0d\x63\x48\x14\xb3\x98\x93\x27\x17\x41\x0d\xee\xc9\x60\x00\xd5\xf7\x49\x7d\x8e\x43\x94\xce\x64\x4d\x00\xee\x14\x83\xf2\x08\xf8\xc5\xd9\x68\xd4\x7f\x6c\x8a\xc7\x7d\xc5\x0b\xec\x47\xcd\x30\x89\xef\xb9\x92\xa0\x57\x81\x3d\x99\xb6\x82\xcb\x8b\x78\xbe\x23\x4f\xe8\xcd\xf8\xbf\xe4\x86\xa9\xff\x4c\xcb\x1a\x32\xcd\x65\xad\x60\x45\x86\xd1\xef\x95\xc6\x69\x5e\x03\x7a\x6f\xfd\x52\x43\xf6\x69\x16\xe2\xb9\x05\x49\xf9\xd4\x11\xc0\x29\x36\xdf\x9e\x4c\x93\x9c\xf3\x8b\x1b\xb0\x3b\x83\x51\x03\xe6\x3e\x7b\x02\x63\x95\x05\xc1\xb7\xc2\x22\xc0\x55\x5d\xfc\x08\x4e\x69\xfc\x5f\x9d\xb1\x89\x7b\xdb\xb6\xe8\xa3\x90\x05\xef\x43\x0a\x88\x22\xcf\xf3\x23\xf2\x1a\xfe\x8e\xbf\xaf\xb7\x43\x7d\x8f\xa7\x37\xd6\x67\xde\xa5\x9a\xfa\xe3\xdd\xe3\x36\x47\xaa\x38\x18\x59\x57\xe2\x49\xd0\x17\xac\xfa\x5b\x65\x7f\xf5\xa3\x57\x7d\xd4\x35\xcf\xab\x6b\xd5\x55\xfd\x16\x39\x7d\xae\x21\xcf\x79\x0c\x3c\xb8\xd4\x88\xd3\x5c\x89\x82\xf6\x09\xfb\xa7\x57\x60\xa8\x8f\x3a\x16\x21\xf5\x27\xe2\xee\x2e\xaa\x5b\xa1\xf7\x55\x9d\x5f\xcb\xa4\x17\x5a\x64\x8e\x57\x6b\x88\xdd\x6c\x1d\xe9\xb2\x12\xc5\x65\x8c\xcb\x32\x95\x1b\x07\xe3\x3a\xda\x5f\x85\x18\xea\xc5\x2c\xbe\xb6\xc5\x3f\x01\x00\x00\xff\xff\xb3\xe2\x11\x01\x30\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1584, mode: os.FileMode(420), modTime: time.Unix(1538373141, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(420), modTime: time.Unix(1538212827, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cft.go.templ": cftGoTempl,
	"controller.go.templ": controllerGoTempl,
	"template_functions.go.templ": template_functionsGoTempl,
	"types.go.templ": typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cft.go.templ": &bintree{cftGoTempl, map[string]*bintree{}},
	"controller.go.templ": &bintree{controllerGoTempl, map[string]*bintree{}},
	"template_functions.go.templ": &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ": &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

